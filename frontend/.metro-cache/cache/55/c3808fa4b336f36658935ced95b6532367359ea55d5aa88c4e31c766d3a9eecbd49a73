{"dependencies":[{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":57,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getDevicePushTokenAsync;\n    }\n  });\n  var _expoConstants = require(_dependencyMap[0], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[2], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  async function getDevicePushTokenAsync() {\n    const data = await _subscribeDeviceToPushNotificationsAsync();\n    DeviceEventEmitter.default.emit('onDevicePushToken', {\n      devicePushToken: data\n    });\n    return {\n      type: _expoModulesCore.Platform.OS,\n      data\n    };\n  }\n  function guardPermission() {\n    if (!('Notification' in window)) {\n      throw new _expoModulesCore.CodedError('ERR_UNAVAILABLE', 'The Web Notifications API is not available on this device.');\n    }\n    if (!navigator.serviceWorker) {\n      throw new _expoModulesCore.CodedError('ERR_UNAVAILABLE', 'Notifications cannot be used because the service worker API is not supported on this device. This might also happen because your web page does not support HTTPS.');\n    }\n    if (Notification.permission !== 'granted') {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PERMISSION_DENIED', `Cannot use web notifications without permissions granted. Request permissions with \"expo-permissions\".`);\n    }\n  }\n  async function _subscribeDeviceToPushNotificationsAsync() {\n    // @ts-expect-error: TODO: not on the schema\n    const vapidPublicKey = Constants.default.expoConfig?.notification?.vapidPublicKey;\n    if (!vapidPublicKey) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_WEB_MISSING_CONFIG', 'You must provide `notification.vapidPublicKey` in `app.json` to use push notifications on web. Learn more: https://docs.expo.dev/versions/latest/guides/using-vapid/.');\n    }\n    // @ts-expect-error: TODO: not on the schema\n    const serviceWorkerPath = Constants.default.expoConfig?.notification?.serviceWorkerPath;\n    if (!serviceWorkerPath) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_MISSING_CONFIGURATION', 'You must specify `notification.serviceWorkerPath` in `app.json` to use push notifications on the web. Provide the path to the service worker that will handle notifications.');\n    }\n    guardPermission();\n    let registration = null;\n    try {\n      registration = await navigator.serviceWorker.register(serviceWorkerPath);\n    } catch (error) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', `Could not register this device for push notifications because the service worker (${serviceWorkerPath}) could not be registered: ${error}`);\n    }\n    await navigator.serviceWorker.ready;\n    if (!registration.active) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', 'Could not register this device for push notifications because the service worker is not active.');\n    }\n    const subscribeOptions = {\n      userVisibleOnly: true,\n      applicationServerKey: _urlBase64ToUint8Array(vapidPublicKey)\n    };\n    let pushSubscription = null;\n    try {\n      pushSubscription = await registration.pushManager.subscribe(subscribeOptions);\n    } catch (error) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', 'The device was unable to register for remote notifications with the browser endpoint. (' + error + ')');\n    }\n    const pushSubscriptionJson = pushSubscription.toJSON();\n    const subscriptionObject = {\n      endpoint: pushSubscriptionJson.endpoint,\n      keys: {\n        p256dh: pushSubscriptionJson.keys.p256dh,\n        auth: pushSubscriptionJson.keys.auth\n      }\n    };\n    // Store notification icon string in service worker.\n    // This message is received by `/expo-service-worker.js`.\n    // We wrap it with `fromExpoWebClient` to make sure other message\n    // will not override content such as `notificationIcon`.\n    // https://stackoverflow.com/a/35729334/2603230\n    const notificationIcon = (Constants.default.expoConfig?.notification ?? {}).icon;\n    await registration.active.postMessage(JSON.stringify({\n      fromExpoWebClient: {\n        notificationIcon\n      }\n    }));\n    return subscriptionObject;\n  }\n  // https://github.com/web-push-libs/web-push#using-vapid-key-for-applicationserverkey\n  function _urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n});","lineCount":108,"map":[[12,2,4,15,"Object"],[12,8,4,15],[12,9,4,15,"defineProperty"],[12,23,4,15],[12,24,4,15,"exports"],[12,31,4,15],[13,4,4,15,"enumerable"],[13,14,4,15],[14,4,4,15,"get"],[14,7,4,15],[14,18,4,15,"get"],[14,19,4,15],[15,6,4,15],[15,13,4,15,"getDevicePushTokenAsync"],[15,36,4,15],[16,4,4,15],[17,2,4,15],[18,2,1,0],[18,6,1,0,"_expoConstants"],[18,20,1,0],[18,23,1,0,"require"],[18,30,1,0],[18,31,1,0,"_dependencyMap"],[18,45,1,0],[19,2,1,0],[19,6,1,0,"Constants"],[19,15,1,0],[19,18,1,0,"_interopDefault"],[19,33,1,0],[19,34,1,0,"_expoConstants"],[19,48,1,0],[20,2,2,0],[20,6,2,0,"_expoModulesCore"],[20,22,2,0],[20,25,2,0,"require"],[20,32,2,0],[20,33,2,0,"_dependencyMap"],[20,47,2,0],[21,2,2,57],[21,6,2,57,"_reactNativeWebDistExportsDeviceEventEmitter"],[21,50,2,57],[21,53,2,57,"require"],[21,60,2,57],[21,61,2,57,"_dependencyMap"],[21,75,2,57],[22,2,2,57],[22,6,2,57,"DeviceEventEmitter"],[22,24,2,57],[22,27,2,57,"_interopDefault"],[22,42,2,57],[22,43,2,57,"_reactNativeWebDistExportsDeviceEventEmitter"],[22,87,2,57],[23,2,4,15],[23,17,4,30,"getDevicePushTokenAsync"],[23,40,4,53,"getDevicePushTokenAsync"],[23,41,4,53],[23,43,4,56],[24,4,5,4],[24,10,5,10,"data"],[24,14,5,14],[24,17,5,17],[24,23,5,23,"_subscribeDeviceToPushNotificationsAsync"],[24,63,5,63],[24,64,5,64],[24,65,5,65],[25,4,6,4,"DeviceEventEmitter"],[25,22,6,22],[25,23,6,22,"default"],[25,30,6,22],[25,31,6,23,"emit"],[25,35,6,27],[25,36,6,28],[25,55,6,47],[25,57,6,49],[26,6,6,51,"devicePushToken"],[26,21,6,66],[26,23,6,68,"data"],[27,4,6,73],[27,5,6,74],[27,6,6,75],[28,4,7,4],[28,11,7,11],[29,6,7,13,"type"],[29,10,7,17],[29,12,7,19,"Platform"],[29,28,7,27],[29,29,7,27,"Platform"],[29,37,7,27],[29,38,7,28,"OS"],[29,40,7,30],[30,6,7,32,"data"],[31,4,7,37],[31,5,7,38],[32,2,8,0],[33,2,9,0],[33,11,9,9,"guardPermission"],[33,26,9,24,"guardPermission"],[33,27,9,24],[33,29,9,27],[34,4,10,4],[34,8,10,8],[34,10,10,10],[34,24,10,24],[34,28,10,28,"window"],[34,34,10,34],[34,35,10,35],[34,37,10,37],[35,6,11,8],[35,12,11,14],[35,16,11,18,"CodedError"],[35,32,11,28],[35,33,11,28,"CodedError"],[35,43,11,28],[35,44,11,29],[35,61,11,46],[35,63,11,48],[35,123,11,108],[35,124,11,109],[36,4,12,4],[37,4,13,4],[37,8,13,8],[37,9,13,9,"navigator"],[37,18,13,18],[37,19,13,19,"serviceWorker"],[37,32,13,32],[37,34,13,34],[38,6,14,8],[38,12,14,14],[38,16,14,18,"CodedError"],[38,32,14,28],[38,33,14,28,"CodedError"],[38,43,14,28],[38,44,14,29],[38,61,14,46],[38,63,14,48],[38,226,14,211],[38,227,14,212],[39,4,15,4],[40,4,16,4],[40,8,16,8,"Notification"],[40,20,16,20],[40,21,16,21,"permission"],[40,31,16,31],[40,36,16,36],[40,45,16,45],[40,47,16,47],[41,6,17,8],[41,12,17,14],[41,16,17,18,"CodedError"],[41,32,17,28],[41,33,17,28,"CodedError"],[41,43,17,28],[41,44,17,29],[41,81,17,66],[41,83,17,68],[41,187,17,172],[41,188,17,173],[42,4,18,4],[43,2,19,0],[44,2,20,0],[44,17,20,15,"_subscribeDeviceToPushNotificationsAsync"],[44,57,20,55,"_subscribeDeviceToPushNotificationsAsync"],[44,58,20,55],[44,60,20,58],[45,4,21,4],[46,4,22,4],[46,10,22,10,"vapidPublicKey"],[46,24,22,24],[46,27,22,27,"Constants"],[46,36,22,36],[46,37,22,36,"default"],[46,44,22,36],[46,45,22,37,"expoConfig"],[46,55,22,47],[46,57,22,49,"notification"],[46,69,22,61],[46,71,22,63,"vapidPublicKey"],[46,85,22,77],[47,4,23,4],[47,8,23,8],[47,9,23,9,"vapidPublicKey"],[47,23,23,23],[47,25,23,25],[48,6,24,8],[48,12,24,14],[48,16,24,18,"CodedError"],[48,32,24,28],[48,33,24,28,"CodedError"],[48,43,24,28],[48,44,24,29],[48,87,24,72],[48,89,24,74],[48,256,24,241],[48,257,24,242],[49,4,25,4],[50,4,26,4],[51,4,27,4],[51,10,27,10,"serviceWorkerPath"],[51,27,27,27],[51,30,27,30,"Constants"],[51,39,27,39],[51,40,27,39,"default"],[51,47,27,39],[51,48,27,40,"expoConfig"],[51,58,27,50],[51,60,27,52,"notification"],[51,72,27,64],[51,74,27,66,"serviceWorkerPath"],[51,91,27,83],[52,4,28,4],[52,8,28,8],[52,9,28,9,"serviceWorkerPath"],[52,26,28,26],[52,28,28,28],[53,6,29,8],[53,12,29,14],[53,16,29,18,"CodedError"],[53,32,29,28],[53,33,29,28,"CodedError"],[53,43,29,28],[53,44,29,29],[53,90,29,75],[53,92,29,77],[53,266,29,251],[53,267,29,252],[54,4,30,4],[55,4,31,4,"guardPermission"],[55,19,31,19],[55,20,31,20],[55,21,31,21],[56,4,32,4],[56,8,32,8,"registration"],[56,20,32,20],[56,23,32,23],[56,27,32,27],[57,4,33,4],[57,8,33,8],[58,6,34,8,"registration"],[58,18,34,20],[58,21,34,23],[58,27,34,29,"navigator"],[58,36,34,38],[58,37,34,39,"serviceWorker"],[58,50,34,52],[58,51,34,53,"register"],[58,59,34,61],[58,60,34,62,"serviceWorkerPath"],[58,77,34,79],[58,78,34,80],[59,4,35,4],[59,5,35,5],[59,6,36,4],[59,13,36,11,"error"],[59,18,36,16],[59,20,36,18],[60,6,37,8],[60,12,37,14],[60,16,37,18,"CodedError"],[60,32,37,28],[60,33,37,28,"CodedError"],[60,43,37,28],[60,44,37,29],[60,88,37,73],[60,90,37,75],[60,175,37,160,"serviceWorkerPath"],[60,192,37,177],[60,222,37,207,"error"],[60,227,37,212],[60,229,37,214],[60,230,37,215],[61,4,38,4],[62,4,39,4],[62,10,39,10,"navigator"],[62,19,39,19],[62,20,39,20,"serviceWorker"],[62,33,39,33],[62,34,39,34,"ready"],[62,39,39,39],[63,4,40,4],[63,8,40,8],[63,9,40,9,"registration"],[63,21,40,21],[63,22,40,22,"active"],[63,28,40,28],[63,30,40,30],[64,6,41,8],[64,12,41,14],[64,16,41,18,"CodedError"],[64,32,41,28],[64,33,41,28,"CodedError"],[64,43,41,28],[64,44,41,29],[64,88,41,73],[64,90,41,75],[64,187,41,172],[64,188,41,173],[65,4,42,4],[66,4,43,4],[66,10,43,10,"subscribeOptions"],[66,26,43,26],[66,29,43,29],[67,6,44,8,"userVisibleOnly"],[67,21,44,23],[67,23,44,25],[67,27,44,29],[68,6,45,8,"applicationServerKey"],[68,26,45,28],[68,28,45,30,"_urlBase64ToUint8Array"],[68,50,45,52],[68,51,45,53,"vapidPublicKey"],[68,65,45,67],[69,4,46,4],[69,5,46,5],[70,4,47,4],[70,8,47,8,"pushSubscription"],[70,24,47,24],[70,27,47,27],[70,31,47,31],[71,4,48,4],[71,8,48,8],[72,6,49,8,"pushSubscription"],[72,22,49,24],[72,25,49,27],[72,31,49,33,"registration"],[72,43,49,45],[72,44,49,46,"pushManager"],[72,55,49,57],[72,56,49,58,"subscribe"],[72,65,49,67],[72,66,49,68,"subscribeOptions"],[72,82,49,84],[72,83,49,85],[73,4,50,4],[73,5,50,5],[73,6,51,4],[73,13,51,11,"error"],[73,18,51,16],[73,20,51,18],[74,6,52,8],[74,12,52,14],[74,16,52,18,"CodedError"],[74,32,52,28],[74,33,52,28,"CodedError"],[74,43,52,28],[74,44,52,29],[74,88,52,73],[74,90,52,75],[74,179,52,164],[74,182,53,12,"error"],[74,187,53,17],[74,190,54,12],[74,193,54,15],[74,194,54,16],[75,4,55,4],[76,4,56,4],[76,10,56,10,"pushSubscriptionJson"],[76,30,56,30],[76,33,56,33,"pushSubscription"],[76,49,56,49],[76,50,56,50,"toJSON"],[76,56,56,56],[76,57,56,57],[76,58,56,58],[77,4,57,4],[77,10,57,10,"subscriptionObject"],[77,28,57,28],[77,31,57,31],[78,6,58,8,"endpoint"],[78,14,58,16],[78,16,58,18,"pushSubscriptionJson"],[78,36,58,38],[78,37,58,39,"endpoint"],[78,45,58,47],[79,6,59,8,"keys"],[79,10,59,12],[79,12,59,14],[80,8,60,12,"p256dh"],[80,14,60,18],[80,16,60,20,"pushSubscriptionJson"],[80,36,60,40],[80,37,60,41,"keys"],[80,41,60,45],[80,42,60,46,"p256dh"],[80,48,60,52],[81,8,61,12,"auth"],[81,12,61,16],[81,14,61,18,"pushSubscriptionJson"],[81,34,61,38],[81,35,61,39,"keys"],[81,39,61,43],[81,40,61,44,"auth"],[82,6,62,8],[83,4,63,4],[83,5,63,5],[84,4,64,4],[85,4,65,4],[86,4,66,4],[87,4,67,4],[88,4,68,4],[89,4,69,4],[89,10,69,10,"notificationIcon"],[89,26,69,26],[89,29,69,29],[89,30,69,30,"Constants"],[89,39,69,39],[89,40,69,39,"default"],[89,47,69,39],[89,48,69,40,"expoConfig"],[89,58,69,50],[89,60,69,52,"notification"],[89,72,69,64],[89,76,69,68],[89,77,69,69],[89,78,69,70],[89,80,69,72,"icon"],[89,84,69,76],[90,4,70,4],[90,10,70,10,"registration"],[90,22,70,22],[90,23,70,23,"active"],[90,29,70,29],[90,30,70,30,"postMessage"],[90,41,70,41],[90,42,70,42,"JSON"],[90,46,70,46],[90,47,70,47,"stringify"],[90,56,70,56],[90,57,70,57],[91,6,70,59,"fromExpoWebClient"],[91,23,70,76],[91,25,70,78],[92,8,70,80,"notificationIcon"],[93,6,70,97],[94,4,70,99],[94,5,70,100],[94,6,70,101],[94,7,70,102],[95,4,71,4],[95,11,71,11,"subscriptionObject"],[95,29,71,29],[96,2,72,0],[97,2,73,0],[98,2,74,0],[98,11,74,9,"_urlBase64ToUint8Array"],[98,33,74,31,"_urlBase64ToUint8Array"],[98,34,74,32,"base64String"],[98,46,74,44],[98,48,74,46],[99,4,75,4],[99,10,75,10,"padding"],[99,17,75,17],[99,20,75,20],[99,23,75,23],[99,24,75,24,"repeat"],[99,30,75,30],[99,31,75,31],[99,32,75,32],[99,33,75,33],[99,36,75,37,"base64String"],[99,48,75,49],[99,49,75,50,"length"],[99,55,75,56],[99,58,75,59],[99,59,75,61],[99,63,75,65],[99,64,75,66],[99,65,75,67],[100,4,76,4],[100,10,76,10,"base64"],[100,16,76,16],[100,19,76,19],[100,20,76,20,"base64String"],[100,32,76,32],[100,35,76,35,"padding"],[100,42,76,42],[100,44,76,44,"replace"],[100,51,76,51],[100,52,76,52],[100,56,76,56],[100,58,76,58],[100,61,76,61],[100,62,76,62],[100,63,76,63,"replace"],[100,70,76,70],[100,71,76,71],[100,75,76,75],[100,77,76,77],[100,80,76,80],[100,81,76,81],[101,4,77,4],[101,10,77,10,"rawData"],[101,17,77,17],[101,20,77,20,"window"],[101,26,77,26],[101,27,77,27,"atob"],[101,31,77,31],[101,32,77,32,"base64"],[101,38,77,38],[101,39,77,39],[102,4,78,4],[102,10,78,10,"outputArray"],[102,21,78,21],[102,24,78,24],[102,28,78,28,"Uint8Array"],[102,38,78,38],[102,39,78,39,"rawData"],[102,46,78,46],[102,47,78,47,"length"],[102,53,78,53],[102,54,78,54],[103,4,79,4],[103,9,79,9],[103,13,79,13,"i"],[103,14,79,14],[103,17,79,17],[103,18,79,18],[103,20,79,20,"i"],[103,21,79,21],[103,24,79,24,"rawData"],[103,31,79,31],[103,32,79,32,"length"],[103,38,79,38],[103,40,79,40],[103,42,79,42,"i"],[103,43,79,43],[103,45,79,45],[104,6,80,8,"outputArray"],[104,17,80,19],[104,18,80,20,"i"],[104,19,80,21],[104,20,80,22],[104,23,80,25,"rawData"],[104,30,80,32],[104,31,80,33,"charCodeAt"],[104,41,80,43],[104,42,80,44,"i"],[104,43,80,45],[104,44,80,46],[105,4,81,4],[106,4,82,4],[106,11,82,11,"outputArray"],[106,22,82,22],[107,2,83,0],[108,0,83,1],[108,3]],"functionMap":{"names":["<global>","getDevicePushTokenAsync","guardPermission","_subscribeDeviceToPushNotificationsAsync","_urlBase64ToUint8Array"],"mappings":"AAA;eCG;CDI;AEC;CFU;AGC;CHoD;AIE;CJS"},"hasCjsExports":false},"type":"js/module"}]}