{"dependencies":[{"name":"abort-controller/polyfill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"Zt445sKJeaqmd3t2yOR0GF+G/L0=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":56,"index":92}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":66,"index":159}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"],"imports":1}},{"name":"./TokenEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":54,"index":214}}],"key":"5j/AymtYsxXL7qVrWh9rwW/7ePw=","exportNames":["*"],"imports":1}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":64,"index":279}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"],"imports":1}},{"name":"./utils/updateDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":280},"end":{"line":6,"column":120,"index":400}}],"key":"153jXZ66s6HybIv8YrABEWMrDwY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.setAutoServerRegistrationEnabledAsync = setAutoServerRegistrationEnabledAsync;\n  exports.__handlePersistedRegistrationInfoAsync = __handlePersistedRegistrationInfoAsync;\n  require(_dependencyMap[0], \"abort-controller/polyfill\");\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _ServerRegistrationModule = require(_dependencyMap[2], \"./ServerRegistrationModule\");\n  var ServerRegistrationModule = _interopDefault(_ServerRegistrationModule);\n  var _TokenEmitter = require(_dependencyMap[3], \"./TokenEmitter\");\n  var _getDevicePushTokenAsync = require(_dependencyMap[4], \"./getDevicePushTokenAsync\");\n  var getDevicePushTokenAsync = _interopDefault(_getDevicePushTokenAsync);\n  var _utilsUpdateDevicePushTokenAsync = require(_dependencyMap[5], \"./utils/updateDevicePushTokenAsync\");\n  let lastAbortController = null;\n  async function updatePushTokenAsync(token) {\n    // Abort current update process\n    lastAbortController?.abort();\n    lastAbortController = new AbortController();\n    return await (0, _utilsUpdateDevicePushTokenAsync.updateDevicePushTokenAsync)(lastAbortController.signal, token);\n  }\n  /**\n   * @hidden - the comment is misleading and the purpose of the function needs to be reevaluated\n   *\n   * Sets the registration information so that the device push token gets pushed\n   * to the given registration endpoint\n   * @param enabled\n   */\n  async function setAutoServerRegistrationEnabledAsync(enabled) {\n    // We are overwriting registration, so we shouldn't let\n    // any pending request complete.\n    lastAbortController?.abort();\n    if (!ServerRegistrationModule.default.setRegistrationInfoAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'setRegistrationInfoAsync');\n    }\n    await ServerRegistrationModule.default.setRegistrationInfoAsync(enabled ? JSON.stringify({\n      isEnabled: enabled\n    }) : null);\n  }\n  // note(Chmiela): This function is exported only for testing purposes.\n  async function __handlePersistedRegistrationInfoAsync(registrationInfo) {\n    if (!registrationInfo) {\n      // No registration info, nothing to do\n      return;\n    }\n    let registration = null;\n    try {\n      registration = JSON.parse(registrationInfo);\n    } catch (e) {\n      console.warn('[expo-notifications] Error encountered while fetching registration information for auto token updates.', e);\n    }\n    if (!registration?.isEnabled) {\n      // Registration is invalid or not enabled, nothing more to do\n      return;\n    }\n    try {\n      // Since the registration is enabled, fetching a \"new\" device token\n      // shouldn't be a problem.\n      const latestDevicePushToken = await (0, getDevicePushTokenAsync.default)();\n      await updatePushTokenAsync(latestDevicePushToken);\n    } catch (e) {\n      console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n    }\n  }\n  if (ServerRegistrationModule.default.getRegistrationInfoAsync) {\n    // A global scope (to get all the updates) device push token\n    // subscription, never cleared.\n    (0, _TokenEmitter.addPushTokenListener)(async token => {\n      try {\n        // Before updating the push token on server we always check if we should\n        // Since modules can't change their method availability while running, we\n        // can assert it's defined.\n        const registrationInfo = await ServerRegistrationModule.default.getRegistrationInfoAsync();\n        if (!registrationInfo) {\n          // Registration is not enabled\n          return;\n        }\n        const registration = JSON.parse(registrationInfo);\n        if (registration?.isEnabled) {\n          // Dispatch an abortable task to update\n          // registration with new token.\n          await updatePushTokenAsync(token);\n        }\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n      }\n    });\n    // Verify if persisted registration\n    // has successfully uploaded last known\n    // device push token. If not, retry.\n    ServerRegistrationModule.default.getRegistrationInfoAsync().then(__handlePersistedRegistrationInfoAsync);\n  } else {\n    console.warn(`[expo-notifications] Error encountered while fetching auto-registration state, new tokens will not be automatically registered on server.`, new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'getRegistrationInfoAsync'));\n  }\n});","lineCount":102,"map":[[12,2,21,0,"exports"],[12,9,21,0],[12,10,21,0,"setAutoServerRegistrationEnabledAsync"],[12,47,21,0],[12,50,21,0,"setAutoServerRegistrationEnabledAsync"],[12,87,21,0],[13,2,31,0,"exports"],[13,9,31,0],[13,10,31,0,"__handlePersistedRegistrationInfoAsync"],[13,48,31,0],[13,51,31,0,"__handlePersistedRegistrationInfoAsync"],[13,89,31,0],[14,2,1,0,"require"],[14,9,1,0],[14,10,1,0,"_dependencyMap"],[14,24,1,0],[15,2,2,0],[15,6,2,0,"_expoModulesCore"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,3,0],[16,6,3,0,"_ServerRegistrationModule"],[16,31,3,0],[16,34,3,0,"require"],[16,41,3,0],[16,42,3,0,"_dependencyMap"],[16,56,3,0],[17,2,3,0],[17,6,3,0,"ServerRegistrationModule"],[17,30,3,0],[17,33,3,0,"_interopDefault"],[17,48,3,0],[17,49,3,0,"_ServerRegistrationModule"],[17,74,3,0],[18,2,4,0],[18,6,4,0,"_TokenEmitter"],[18,19,4,0],[18,22,4,0,"require"],[18,29,4,0],[18,30,4,0,"_dependencyMap"],[18,44,4,0],[19,2,5,0],[19,6,5,0,"_getDevicePushTokenAsync"],[19,30,5,0],[19,33,5,0,"require"],[19,40,5,0],[19,41,5,0,"_dependencyMap"],[19,55,5,0],[20,2,5,0],[20,6,5,0,"getDevicePushTokenAsync"],[20,29,5,0],[20,32,5,0,"_interopDefault"],[20,47,5,0],[20,48,5,0,"_getDevicePushTokenAsync"],[20,72,5,0],[21,2,6,0],[21,6,6,0,"_utilsUpdateDevicePushTokenAsync"],[21,38,6,0],[21,41,6,0,"require"],[21,48,6,0],[21,49,6,0,"_dependencyMap"],[21,63,6,0],[22,2,7,0],[22,6,7,4,"lastAbortController"],[22,25,7,23],[22,28,7,26],[22,32,7,30],[23,2,8,0],[23,17,8,15,"updatePushTokenAsync"],[23,37,8,35,"updatePushTokenAsync"],[23,38,8,36,"token"],[23,43,8,41],[23,45,8,43],[24,4,9,4],[25,4,10,4,"lastAbortController"],[25,23,10,23],[25,25,10,25,"abort"],[25,30,10,30],[25,31,10,31],[25,32,10,32],[26,4,11,4,"lastAbortController"],[26,23,11,23],[26,26,11,26],[26,30,11,30,"AbortController"],[26,45,11,45],[26,46,11,46],[26,47,11,47],[27,4,12,4],[27,11,12,11],[27,17,12,17],[27,21,12,17,"updateDevicePushTokenAsyncWithSignal"],[27,53,12,53],[27,54,12,53,"updateDevicePushTokenAsync"],[27,80,12,53],[27,82,12,54,"lastAbortController"],[27,101,12,73],[27,102,12,74,"signal"],[27,108,12,80],[27,110,12,82,"token"],[27,115,12,87],[27,116,12,88],[28,2,13,0],[29,2,14,0],[30,0,15,0],[31,0,16,0],[32,0,17,0],[33,0,18,0],[34,0,19,0],[35,0,20,0],[36,2,21,7],[36,17,21,22,"setAutoServerRegistrationEnabledAsync"],[36,54,21,59,"setAutoServerRegistrationEnabledAsync"],[36,55,21,60,"enabled"],[36,62,21,67],[36,64,21,69],[37,4,22,4],[38,4,23,4],[39,4,24,4,"lastAbortController"],[39,23,24,23],[39,25,24,25,"abort"],[39,30,24,30],[39,31,24,31],[39,32,24,32],[40,4,25,4],[40,8,25,8],[40,9,25,9,"ServerRegistrationModule"],[40,33,25,33],[40,34,25,33,"default"],[40,41,25,33],[40,42,25,34,"setRegistrationInfoAsync"],[40,66,25,58],[40,68,25,60],[41,6,26,8],[41,12,26,14],[41,16,26,18,"UnavailabilityError"],[41,32,26,37],[41,33,26,37,"UnavailabilityError"],[41,52,26,37],[41,53,26,38],[41,79,26,64],[41,81,26,66],[41,107,26,92],[41,108,26,93],[42,4,27,4],[43,4,28,4],[43,10,28,10,"ServerRegistrationModule"],[43,34,28,34],[43,35,28,34,"default"],[43,42,28,34],[43,43,28,35,"setRegistrationInfoAsync"],[43,67,28,59],[43,68,28,60,"enabled"],[43,75,28,67],[43,78,28,70,"JSON"],[43,82,28,74],[43,83,28,75,"stringify"],[43,92,28,84],[43,93,28,85],[44,6,28,87,"isEnabled"],[44,15,28,96],[44,17,28,98,"enabled"],[45,4,28,106],[45,5,28,107],[45,6,28,108],[45,9,28,111],[45,13,28,115],[45,14,28,116],[46,2,29,0],[47,2,30,0],[48,2,31,7],[48,17,31,22,"__handlePersistedRegistrationInfoAsync"],[48,55,31,60,"__handlePersistedRegistrationInfoAsync"],[48,56,31,61,"registrationInfo"],[48,72,31,77],[48,74,31,79],[49,4,32,4],[49,8,32,8],[49,9,32,9,"registrationInfo"],[49,25,32,25],[49,27,32,27],[50,6,33,8],[51,6,34,8],[52,4,35,4],[53,4,36,4],[53,8,36,8,"registration"],[53,20,36,20],[53,23,36,23],[53,27,36,27],[54,4,37,4],[54,8,37,8],[55,6,38,8,"registration"],[55,18,38,20],[55,21,38,23,"JSON"],[55,25,38,27],[55,26,38,28,"parse"],[55,31,38,33],[55,32,38,34,"registrationInfo"],[55,48,38,50],[55,49,38,51],[56,4,39,4],[56,5,39,5],[56,6,40,4],[56,13,40,11,"e"],[56,14,40,12],[56,16,40,14],[57,6,41,8,"console"],[57,13,41,15],[57,14,41,16,"warn"],[57,18,41,20],[57,19,41,21],[57,123,41,125],[57,125,41,127,"e"],[57,126,41,128],[57,127,41,129],[58,4,42,4],[59,4,43,4],[59,8,43,8],[59,9,43,9,"registration"],[59,21,43,21],[59,23,43,23,"isEnabled"],[59,32,43,32],[59,34,43,34],[60,6,44,8],[61,6,45,8],[62,4,46,4],[63,4,47,4],[63,8,47,8],[64,6,48,8],[65,6,49,8],[66,6,50,8],[66,12,50,14,"latestDevicePushToken"],[66,33,50,35],[66,36,50,38],[66,42,50,44],[66,46,50,44,"getDevicePushTokenAsync"],[66,69,50,67],[66,70,50,67,"default"],[66,77,50,67],[66,79,50,68],[66,80,50,69],[67,6,51,8],[67,12,51,14,"updatePushTokenAsync"],[67,32,51,34],[67,33,51,35,"latestDevicePushToken"],[67,54,51,56],[67,55,51,57],[68,4,52,4],[68,5,52,5],[68,6,53,4],[68,13,53,11,"e"],[68,14,53,12],[68,16,53,14],[69,6,54,8,"console"],[69,13,54,15],[69,14,54,16,"warn"],[69,18,54,20],[69,19,54,21],[69,125,54,127],[69,127,54,129,"e"],[69,128,54,130],[69,129,54,131],[70,4,55,4],[71,2,56,0],[72,2,57,0],[72,6,57,4,"ServerRegistrationModule"],[72,30,57,28],[72,31,57,28,"default"],[72,38,57,28],[72,39,57,29,"getRegistrationInfoAsync"],[72,63,57,53],[72,65,57,55],[73,4,58,4],[74,4,59,4],[75,4,60,4],[75,8,60,4,"addPushTokenListener"],[75,21,60,24],[75,22,60,24,"addPushTokenListener"],[75,42,60,24],[75,44,60,25],[75,50,60,32,"token"],[75,55,60,37],[75,59,60,42],[76,6,61,8],[76,10,61,12],[77,8,62,12],[78,8,63,12],[79,8,64,12],[80,8,65,12],[80,14,65,18,"registrationInfo"],[80,30,65,34],[80,33,65,37],[80,39,65,43,"ServerRegistrationModule"],[80,63,65,67],[80,64,65,67,"default"],[80,71,65,67],[80,72,65,68,"getRegistrationInfoAsync"],[80,96,65,92],[80,97,65,93],[80,98,65,94],[81,8,66,12],[81,12,66,16],[81,13,66,17,"registrationInfo"],[81,29,66,33],[81,31,66,35],[82,10,67,16],[83,10,68,16],[84,8,69,12],[85,8,70,12],[85,14,70,18,"registration"],[85,26,70,30],[85,29,70,33,"JSON"],[85,33,70,37],[85,34,70,38,"parse"],[85,39,70,43],[85,40,70,44,"registrationInfo"],[85,56,70,60],[85,57,70,61],[86,8,71,12],[86,12,71,16,"registration"],[86,24,71,28],[86,26,71,30,"isEnabled"],[86,35,71,39],[86,37,71,41],[87,10,72,16],[88,10,73,16],[89,10,74,16],[89,16,74,22,"updatePushTokenAsync"],[89,36,74,42],[89,37,74,43,"token"],[89,42,74,48],[89,43,74,49],[90,8,75,12],[91,6,76,8],[91,7,76,9],[91,8,77,8],[91,15,77,15,"e"],[91,16,77,16],[91,18,77,18],[92,8,78,12,"console"],[92,15,78,19],[92,16,78,20,"warn"],[92,20,78,24],[92,21,78,25],[92,127,78,131],[92,129,78,133,"e"],[92,130,78,134],[92,131,78,135],[93,6,79,8],[94,4,80,4],[94,5,80,5],[94,6,80,6],[95,4,81,4],[96,4,82,4],[97,4,83,4],[98,4,84,4,"ServerRegistrationModule"],[98,28,84,28],[98,29,84,28,"default"],[98,36,84,28],[98,37,84,29,"getRegistrationInfoAsync"],[98,61,84,53],[98,62,84,54],[98,63,84,55],[98,64,84,56,"then"],[98,68,84,60],[98,69,84,61,"__handlePersistedRegistrationInfoAsync"],[98,107,84,99],[98,108,84,100],[99,2,85,0],[99,3,85,1],[99,9,86,5],[100,4,87,4,"console"],[100,11,87,11],[100,12,87,12,"warn"],[100,16,87,16],[100,17,87,17],[100,156,87,156],[100,158,87,158],[100,162,87,162,"UnavailabilityError"],[100,178,87,181],[100,179,87,181,"UnavailabilityError"],[100,198,87,181],[100,199,87,182],[100,225,87,208],[100,227,87,210],[100,253,87,236],[100,254,87,237],[100,255,87,238],[101,2,88,0],[102,0,88,1],[102,3]],"functionMap":{"names":["<global>","updatePushTokenAsync","setAutoServerRegistrationEnabledAsync","__handlePersistedRegistrationInfoAsync","addPushTokenListener$argument_0"],"mappings":"AAA;ACO;CDK;OEQ;CFQ;OGE;CHyB;yBII;KJoB"},"hasCjsExports":false},"type":"js/module"}]}