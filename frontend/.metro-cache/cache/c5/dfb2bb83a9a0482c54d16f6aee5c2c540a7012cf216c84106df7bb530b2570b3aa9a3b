{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./BadgeModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":40,"index":107}}],"key":"r7fk+7ZxSOstJNjSYSB8oukiur0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return setBadgeCountAsync;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _BadgeModule = require(_dependencyMap[1], \"./BadgeModule\");\n  var BadgeModule = _interopDefault(_BadgeModule);\n  /**\n   * Sets the badge of the app's icon to the specified number. Setting it to `0` clears the badge. On iOS, this method requires that you have requested\n   * the user's permission for `allowBadge` via [`requestPermissionsAsync`](#requestpermissionsasyncpermissions),\n   * otherwise it will automatically return `false`.\n   * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will resolve to `false`.\n   * @param badgeCount The count which should appear on the badge. A value of `0` will clear the badge.\n   * @param options An object of options configuring behavior applied.\n   * @return It returns a Promise resolving to a boolean representing whether the setting of the badge succeeded.\n   * @header badge\n   */\n  async function setBadgeCountAsync(badgeCount, options) {\n    if (!BadgeModule.default.setBadgeCountAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n    }\n    const platformOptions = options?.[_expoModulesCore.Platform.OS];\n    return await BadgeModule.default.setBadgeCountAsync(badgeCount, platformOptions);\n  }\n});","lineCount":38,"map":[[12,2,13,15,"Object"],[12,8,13,15],[12,9,13,15,"defineProperty"],[12,23,13,15],[12,24,13,15,"exports"],[12,31,13,15],[13,4,13,15,"enumerable"],[13,14,13,15],[14,4,13,15,"get"],[14,7,13,15],[14,18,13,15,"get"],[14,19,13,15],[15,6,13,15],[15,13,13,15,"setBadgeCountAsync"],[15,31,13,15],[16,4,13,15],[17,2,13,15],[18,2,1,0],[18,6,1,0,"_expoModulesCore"],[18,22,1,0],[18,25,1,0,"require"],[18,32,1,0],[18,33,1,0,"_dependencyMap"],[18,47,1,0],[19,2,2,0],[19,6,2,0,"_BadgeModule"],[19,18,2,0],[19,21,2,0,"require"],[19,28,2,0],[19,29,2,0,"_dependencyMap"],[19,43,2,0],[20,2,2,0],[20,6,2,0,"BadgeModule"],[20,17,2,0],[20,20,2,0,"_interopDefault"],[20,35,2,0],[20,36,2,0,"_BadgeModule"],[20,48,2,0],[21,2,3,0],[22,0,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,0,9,0],[28,0,10,0],[29,0,11,0],[30,0,12,0],[31,2,13,15],[31,17,13,30,"setBadgeCountAsync"],[31,35,13,48,"setBadgeCountAsync"],[31,36,13,49,"badgeCount"],[31,46,13,59],[31,48,13,61,"options"],[31,55,13,68],[31,57,13,70],[32,4,14,4],[32,8,14,8],[32,9,14,9,"BadgeModule"],[32,20,14,20],[32,21,14,20,"default"],[32,28,14,20],[32,29,14,21,"setBadgeCountAsync"],[32,47,14,39],[32,49,14,41],[33,6,15,8],[33,12,15,14],[33,16,15,18,"UnavailabilityError"],[33,32,15,37],[33,33,15,37,"UnavailabilityError"],[33,52,15,37],[33,53,15,38],[33,72,15,57],[33,74,15,59],[33,94,15,79],[33,95,15,80],[34,4,16,4],[35,4,17,4],[35,10,17,10,"platformOptions"],[35,25,17,25],[35,28,17,28,"options"],[35,35,17,35],[35,38,17,38,"Platform"],[35,54,17,46],[35,55,17,46,"Platform"],[35,63,17,46],[35,64,17,47,"OS"],[35,66,17,49],[35,67,17,50],[36,4,18,4],[36,11,18,11],[36,17,18,17,"BadgeModule"],[36,28,18,28],[36,29,18,28,"default"],[36,36,18,28],[36,37,18,29,"setBadgeCountAsync"],[36,55,18,47],[36,56,18,48,"badgeCount"],[36,66,18,58],[36,68,18,60,"platformOptions"],[36,83,18,75],[36,84,18,76],[37,2,19,0],[38,0,19,1],[38,3]],"functionMap":{"names":["<global>","setBadgeCountAsync"],"mappings":"AAA;eCY;CDM"},"hasCjsExports":false},"type":"js/module"}]}