{"dependencies":[{"name":"@ide/backoff","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"B9a/kyy9aP0LgQkY79+QgjlpSv0=","exportNames":["*"],"imports":1}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":78,"index":186}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"../ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":67,"index":254}}],"key":"3RTx8KhSs/2ZB3r9U5DaT+SEuk4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.updateDevicePushTokenAsync = updateDevicePushTokenAsync;\n  var _ideBackoff = require(_dependencyMap[0], \"@ide/backoff\");\n  var _expoApplication = require(_dependencyMap[1], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ServerRegistrationModule = require(_dependencyMap[3], \"../ServerRegistrationModule\");\n  var ServerRegistrationModule = _interopDefault(_ServerRegistrationModule);\n  const updateDevicePushTokenUrl = 'https://exp.host/--/api/v2/push/updateDeviceToken';\n  async function updateDevicePushTokenAsync(signal, token) {\n    const doUpdateDevicePushTokenAsync = async retry => {\n      const [development, deviceId] = await Promise.all([shouldUseDevelopmentNotificationService(), getDeviceIdAsync()]);\n      const body = {\n        deviceId: deviceId.toLowerCase(),\n        development,\n        deviceToken: token.data,\n        appId: Application.applicationId,\n        type: getTypeOfToken(token)\n      };\n      try {\n        const response = await fetch(updateDevicePushTokenUrl, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(body),\n          signal\n        });\n        // Help debug erroring servers\n        if (!response.ok) {\n          console.debug('[expo-notifications] Error encountered while updating the device push token with the server:', await response.text());\n        }\n        // Retry if request failed\n        if (!response.ok) {\n          retry();\n        }\n      } catch (error) {\n        // Error returned if the request is aborted should be an 'AbortError'. In\n        // React Native fetch is polyfilled using `whatwg-fetch` which:\n        // - creates `AbortError`s like this\n        //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L505\n        // - which creates exceptions like\n        //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L490-L494\n        if (typeof error === 'object' && error?.name === 'AbortError') {\n          // We don't consider AbortError a failure, it's a sign somewhere else the\n          // request is expected to succeed and we don't need this one, so let's\n          // just return.\n          return;\n        }\n        console.warn('[expo-notifications] Error thrown while updating the device push token with the server:', error);\n        retry();\n      }\n    };\n    let shouldTry = true;\n    const retry = () => {\n      shouldTry = true;\n    };\n    let retriesCount = 0;\n    const initialBackoff = 500; // 0.5 s\n    const backoffOptions = {\n      maxBackoff: 2 * 60 * 1000 // 2 minutes\n    };\n    let nextBackoffInterval = (0, _ideBackoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n    while (shouldTry && !signal.aborted) {\n      // Will be set to true by `retry` if it's called\n      shouldTry = false;\n      await doUpdateDevicePushTokenAsync(retry);\n      // Do not wait if we won't retry\n      if (shouldTry && !signal.aborted) {\n        nextBackoffInterval = (0, _ideBackoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n        retriesCount += 1;\n        await new Promise(resolve => setTimeout(resolve, nextBackoffInterval));\n      }\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  async function getDeviceIdAsync() {\n    try {\n      if (!ServerRegistrationModule.default.getInstallationIdAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n      }\n      return await ServerRegistrationModule.default.getInstallationIdAsync();\n    } catch (e) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_DEVICE_ID', `Could not fetch the installation ID of the application: ${e}.`);\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  async function shouldUseDevelopmentNotificationService() {\n    if (_expoModulesCore.Platform.OS === 'ios') {\n      try {\n        const notificationServiceEnvironment = await Application.getIosPushNotificationServiceEnvironmentAsync();\n        if (notificationServiceEnvironment === 'development') {\n          return true;\n        }\n      } catch {\n        // We can't do anything here, we'll fallback to false then.\n      }\n    }\n    return false;\n  }\n});","lineCount":138,"map":[[27,2,6,0,"exports"],[27,9,6,0],[27,10,6,0,"updateDevicePushTokenAsync"],[27,36,6,0],[27,39,6,0,"updateDevicePushTokenAsync"],[27,65,6,0],[28,2,1,0],[28,6,1,0,"_ideBackoff"],[28,17,1,0],[28,20,1,0,"require"],[28,27,1,0],[28,28,1,0,"_dependencyMap"],[28,42,1,0],[29,2,2,0],[29,6,2,0,"_expoApplication"],[29,22,2,0],[29,25,2,0,"require"],[29,32,2,0],[29,33,2,0,"_dependencyMap"],[29,47,2,0],[30,2,2,0],[30,6,2,0,"Application"],[30,17,2,0],[30,20,2,0,"_interopNamespace"],[30,37,2,0],[30,38,2,0,"_expoApplication"],[30,54,2,0],[31,2,3,0],[31,6,3,0,"_expoModulesCore"],[31,22,3,0],[31,25,3,0,"require"],[31,32,3,0],[31,33,3,0,"_dependencyMap"],[31,47,3,0],[32,2,4,0],[32,6,4,0,"_ServerRegistrationModule"],[32,31,4,0],[32,34,4,0,"require"],[32,41,4,0],[32,42,4,0,"_dependencyMap"],[32,56,4,0],[33,2,4,0],[33,6,4,0,"ServerRegistrationModule"],[33,30,4,0],[33,33,4,0,"_interopDefault"],[33,48,4,0],[33,49,4,0,"_ServerRegistrationModule"],[33,74,4,0],[34,2,5,0],[34,8,5,6,"updateDevicePushTokenUrl"],[34,32,5,30],[34,35,5,33],[34,86,5,84],[35,2,6,7],[35,17,6,22,"updateDevicePushTokenAsync"],[35,43,6,48,"updateDevicePushTokenAsync"],[35,44,6,49,"signal"],[35,50,6,55],[35,52,6,57,"token"],[35,57,6,62],[35,59,6,64],[36,4,7,4],[36,10,7,10,"doUpdateDevicePushTokenAsync"],[36,38,7,38],[36,41,7,41],[36,47,7,48,"retry"],[36,52,7,53],[36,56,7,58],[37,6,8,8],[37,12,8,14],[37,13,8,15,"development"],[37,24,8,26],[37,26,8,28,"deviceId"],[37,34,8,36],[37,35,8,37],[37,38,8,40],[37,44,8,46,"Promise"],[37,51,8,53],[37,52,8,54,"all"],[37,55,8,57],[37,56,8,58],[37,57,9,12,"shouldUseDevelopmentNotificationService"],[37,96,9,51],[37,97,9,52],[37,98,9,53],[37,100,10,12,"getDeviceIdAsync"],[37,116,10,28],[37,117,10,29],[37,118,10,30],[37,119,11,9],[37,120,11,10],[38,6,12,8],[38,12,12,14,"body"],[38,16,12,18],[38,19,12,21],[39,8,13,12,"deviceId"],[39,16,13,20],[39,18,13,22,"deviceId"],[39,26,13,30],[39,27,13,31,"toLowerCase"],[39,38,13,42],[39,39,13,43],[39,40,13,44],[40,8,14,12,"development"],[40,19,14,23],[41,8,15,12,"deviceToken"],[41,19,15,23],[41,21,15,25,"token"],[41,26,15,30],[41,27,15,31,"data"],[41,31,15,35],[42,8,16,12,"appId"],[42,13,16,17],[42,15,16,19,"Application"],[42,26,16,30],[42,27,16,31,"applicationId"],[42,40,16,44],[43,8,17,12,"type"],[43,12,17,16],[43,14,17,18,"getTypeOfToken"],[43,28,17,32],[43,29,17,33,"token"],[43,34,17,38],[44,6,18,8],[44,7,18,9],[45,6,19,8],[45,10,19,12],[46,8,20,12],[46,14,20,18,"response"],[46,22,20,26],[46,25,20,29],[46,31,20,35,"fetch"],[46,36,20,40],[46,37,20,41,"updateDevicePushTokenUrl"],[46,61,20,65],[46,63,20,67],[47,10,21,16,"method"],[47,16,21,22],[47,18,21,24],[47,24,21,30],[48,10,22,16,"headers"],[48,17,22,23],[48,19,22,25],[49,12,23,20],[49,26,23,34],[49,28,23,36],[50,10,24,16],[50,11,24,17],[51,10,25,16,"body"],[51,14,25,20],[51,16,25,22,"JSON"],[51,20,25,26],[51,21,25,27,"stringify"],[51,30,25,36],[51,31,25,37,"body"],[51,35,25,41],[51,36,25,42],[52,10,26,16,"signal"],[53,8,27,12],[53,9,27,13],[53,10,27,14],[54,8,28,12],[55,8,29,12],[55,12,29,16],[55,13,29,17,"response"],[55,21,29,25],[55,22,29,26,"ok"],[55,24,29,28],[55,26,29,30],[56,10,30,16,"console"],[56,17,30,23],[56,18,30,24,"debug"],[56,23,30,29],[56,24,30,30],[56,118,30,124],[56,120,30,126],[56,126,30,132,"response"],[56,134,30,140],[56,135,30,141,"text"],[56,139,30,145],[56,140,30,146],[56,141,30,147],[56,142,30,148],[57,8,31,12],[58,8,32,12],[59,8,33,12],[59,12,33,16],[59,13,33,17,"response"],[59,21,33,25],[59,22,33,26,"ok"],[59,24,33,28],[59,26,33,30],[60,10,34,16,"retry"],[60,15,34,21],[60,16,34,22],[60,17,34,23],[61,8,35,12],[62,6,36,8],[62,7,36,9],[62,8,37,8],[62,15,37,15,"error"],[62,20,37,20],[62,22,37,22],[63,8,38,12],[64,8,39,12],[65,8,40,12],[66,8,41,12],[67,8,42,12],[68,8,43,12],[69,8,44,12],[69,12,44,16],[69,19,44,23,"error"],[69,24,44,28],[69,29,44,33],[69,37,44,41],[69,41,44,45,"error"],[69,46,44,50],[69,48,44,52,"name"],[69,52,44,56],[69,57,44,61],[69,69,44,73],[69,71,44,75],[70,10,45,16],[71,10,46,16],[72,10,47,16],[73,10,48,16],[74,8,49,12],[75,8,50,12,"console"],[75,15,50,19],[75,16,50,20,"warn"],[75,20,50,24],[75,21,50,25],[75,110,50,114],[75,112,50,116,"error"],[75,117,50,121],[75,118,50,122],[76,8,51,12,"retry"],[76,13,51,17],[76,14,51,18],[76,15,51,19],[77,6,52,8],[78,4,53,4],[78,5,53,5],[79,4,54,4],[79,8,54,8,"shouldTry"],[79,17,54,17],[79,20,54,20],[79,24,54,24],[80,4,55,4],[80,10,55,10,"retry"],[80,15,55,15],[80,18,55,18,"retry"],[80,19,55,18],[80,24,55,24],[81,6,56,8,"shouldTry"],[81,15,56,17],[81,18,56,20],[81,22,56,24],[82,4,57,4],[82,5,57,5],[83,4,58,4],[83,8,58,8,"retriesCount"],[83,20,58,20],[83,23,58,23],[83,24,58,24],[84,4,59,4],[84,10,59,10,"initialBackoff"],[84,24,59,24],[84,27,59,27],[84,30,59,30],[84,31,59,31],[84,32,59,32],[85,4,60,4],[85,10,60,10,"backoffOptions"],[85,24,60,24],[85,27,60,27],[86,6,61,8,"maxBackoff"],[86,16,61,18],[86,18,61,20],[86,19,61,21],[86,22,61,24],[86,24,61,26],[86,27,61,29],[86,31,61,33],[86,32,61,35],[87,4,62,4],[87,5,62,5],[88,4,63,4],[88,8,63,8,"nextBackoffInterval"],[88,27,63,27],[88,30,63,30],[88,34,63,30,"computeNextBackoffInterval"],[88,45,63,56],[88,46,63,56,"computeNextBackoffInterval"],[88,72,63,56],[88,74,63,57,"initialBackoff"],[88,88,63,71],[88,90,63,73,"retriesCount"],[88,102,63,85],[88,104,63,87,"backoffOptions"],[88,118,63,101],[88,119,63,102],[89,4,64,4],[89,11,64,11,"shouldTry"],[89,20,64,20],[89,24,64,24],[89,25,64,25,"signal"],[89,31,64,31],[89,32,64,32,"aborted"],[89,39,64,39],[89,41,64,41],[90,6,65,8],[91,6,66,8,"shouldTry"],[91,15,66,17],[91,18,66,20],[91,23,66,25],[92,6,67,8],[92,12,67,14,"doUpdateDevicePushTokenAsync"],[92,40,67,42],[92,41,67,43,"retry"],[92,46,67,48],[92,47,67,49],[93,6,68,8],[94,6,69,8],[94,10,69,12,"shouldTry"],[94,19,69,21],[94,23,69,25],[94,24,69,26,"signal"],[94,30,69,32],[94,31,69,33,"aborted"],[94,38,69,40],[94,40,69,42],[95,8,70,12,"nextBackoffInterval"],[95,27,70,31],[95,30,70,34],[95,34,70,34,"computeNextBackoffInterval"],[95,45,70,60],[95,46,70,60,"computeNextBackoffInterval"],[95,72,70,60],[95,74,70,61,"initialBackoff"],[95,88,70,75],[95,90,70,77,"retriesCount"],[95,102,70,89],[95,104,70,91,"backoffOptions"],[95,118,70,105],[95,119,70,106],[96,8,71,12,"retriesCount"],[96,20,71,24],[96,24,71,28],[96,25,71,29],[97,8,72,12],[97,14,72,18],[97,18,72,22,"Promise"],[97,25,72,29],[97,26,72,31,"resolve"],[97,33,72,38],[97,37,72,43,"setTimeout"],[97,47,72,53],[97,48,72,54,"resolve"],[97,55,72,61],[97,57,72,63,"nextBackoffInterval"],[97,76,72,82],[97,77,72,83],[97,78,72,84],[98,6,73,8],[99,4,74,4],[100,2,75,0],[101,2,76,0],[102,2,77,0],[102,17,77,15,"getDeviceIdAsync"],[102,33,77,31,"getDeviceIdAsync"],[102,34,77,31],[102,36,77,34],[103,4,78,4],[103,8,78,8],[104,6,79,8],[104,10,79,12],[104,11,79,13,"ServerRegistrationModule"],[104,35,79,37],[104,36,79,37,"default"],[104,43,79,37],[104,44,79,38,"getInstallationIdAsync"],[104,66,79,60],[104,68,79,62],[105,8,80,12],[105,14,80,18],[105,18,80,22,"UnavailabilityError"],[105,34,80,41],[105,35,80,41,"UnavailabilityError"],[105,54,80,41],[105,55,80,42],[105,85,80,72],[105,87,80,74],[105,111,80,98],[105,112,80,99],[106,6,81,8],[107,6,82,8],[107,13,82,15],[107,19,82,21,"ServerRegistrationModule"],[107,43,82,45],[107,44,82,45,"default"],[107,51,82,45],[107,52,82,46,"getInstallationIdAsync"],[107,74,82,68],[107,75,82,69],[107,76,82,70],[108,4,83,4],[108,5,83,5],[108,6,84,4],[108,13,84,11,"e"],[108,14,84,12],[108,16,84,14],[109,6,85,8],[109,12,85,14],[109,16,85,18,"CodedError"],[109,32,85,28],[109,33,85,28,"CodedError"],[109,43,85,28],[109,44,85,29],[109,73,85,58],[109,75,85,60],[109,134,85,119,"e"],[109,135,85,120],[109,138,85,123],[109,139,85,124],[110,4,86,4],[111,2,87,0],[112,2,88,0],[113,2,89,0],[113,11,89,9,"getTypeOfToken"],[113,25,89,23,"getTypeOfToken"],[113,26,89,24,"devicePushToken"],[113,41,89,39],[113,43,89,41],[114,4,90,4],[114,12,90,12,"devicePushToken"],[114,27,90,27],[114,28,90,28,"type"],[114,32,90,32],[115,6,91,8],[115,11,91,13],[115,16,91,18],[116,8,92,12],[116,15,92,19],[116,21,92,25],[117,6,93,8],[117,11,93,13],[117,20,93,22],[118,8,94,12],[118,15,94,19],[118,20,94,24],[119,6,95,8],[120,6,96,8],[121,8,97,12],[121,15,97,19,"devicePushToken"],[121,30,97,34],[121,31,97,35,"type"],[121,35,97,39],[122,4,98,4],[123,2,99,0],[124,2,100,0],[125,2,101,0],[125,17,101,15,"shouldUseDevelopmentNotificationService"],[125,56,101,54,"shouldUseDevelopmentNotificationService"],[125,57,101,54],[125,59,101,57],[126,4,102,4],[126,8,102,8,"Platform"],[126,24,102,16],[126,25,102,16,"Platform"],[126,33,102,16],[126,34,102,17,"OS"],[126,36,102,19],[126,41,102,24],[126,46,102,29],[126,48,102,31],[127,6,103,8],[127,10,103,12],[128,8,104,12],[128,14,104,18,"notificationServiceEnvironment"],[128,44,104,48],[128,47,104,51],[128,53,104,57,"Application"],[128,64,104,68],[128,65,104,69,"getIosPushNotificationServiceEnvironmentAsync"],[128,110,104,114],[128,111,104,115],[128,112,104,116],[129,8,105,12],[129,12,105,16,"notificationServiceEnvironment"],[129,42,105,46],[129,47,105,51],[129,60,105,64],[129,62,105,66],[130,10,106,16],[130,17,106,23],[130,21,106,27],[131,8,107,12],[132,6,108,8],[132,7,108,9],[132,8,109,8],[132,14,109,14],[133,8,110,12],[134,6,110,12],[135,4,112,4],[136,4,113,4],[136,11,113,11],[136,16,113,16],[137,2,114,0],[138,0,114,1],[138,3]],"functionMap":{"names":["<global>","updateDevicePushTokenAsync","doUpdateDevicePushTokenAsync","retry","Promise$argument_0","getDeviceIdAsync","getTypeOfToken","shouldUseDevelopmentNotificationService"],"mappings":"AAA;OCK;yCCC;KD8C;kBEE;KFE;8BGe,qDH;CDG;AKE;CLU;AME;CNU;AOE;CPa"},"hasCjsExports":false},"type":"js/module"}]}