{"dependencies":[{"name":"@babel/runtime/helpers/arrayLikeToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"GXS4FldiTeP8Bh/xxdQ590oUdm0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":54,"index":69}}],"key":"Opxn8Ttfh7QNGeF0y+BQ6rRbDGo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.extractPathFromURL = extractPathFromURL;\n  var _babelRuntimeHelpersArrayLikeToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/arrayLikeToArray\");\n  var _arrayLikeToArray = _interopDefault(_babelRuntimeHelpersArrayLikeToArray);\n  var _babelRuntimeHelpersToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/toArray\");\n  var _toArray = _interopDefault(_babelRuntimeHelpersToArray);\n  var _escapeStringRegexp = require(_dependencyMap[2], \"escape-string-regexp\");\n  var escapeStringRegexp = _interopDefault(_escapeStringRegexp);\n  function extractPathFromURL(prefixes, url) {\n    for (var prefix of prefixes) {\n      var protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n      var host = prefix.replace(new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}`), '').replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n      var prefixRegex = new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}(/)*${host.split('.').map(it => it === '*' ? '[^/]+' : (0, escapeStringRegexp.default)(it)).join('\\\\.')}`);\n      var _url$split = url.split('?'),\n        _url$split2 = (0, _toArray.default)(_url$split),\n        originAndPath = _url$split2[0],\n        searchParams = (0, _arrayLikeToArray.default)(_url$split2).slice(1);\n      var normalizedURL = originAndPath.replace(/\\/+/g, '/').concat(searchParams.length ? `?${searchParams.join('?')}` : '');\n      if (prefixRegex.test(normalizedURL)) {\n        return normalizedURL.replace(prefixRegex, '');\n      }\n    }\n    return undefined;\n  }\n});","lineCount":37,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"extractPathFromURL"],[12,28,4,0],[12,31,4,0,"extractPathFromURL"],[12,49,4,0],[13,2,18,1],[13,6,18,1,"_babelRuntimeHelpersArrayLikeToArray"],[13,42,18,1],[13,45,18,1,"require"],[13,52,18,1],[13,53,18,1,"_dependencyMap"],[13,67,18,1],[14,2,18,1],[14,6,18,1,"_arrayLikeToArray"],[14,23,18,1],[14,26,18,1,"_interopDefault"],[14,41,18,1],[14,42,18,1,"_babelRuntimeHelpersArrayLikeToArray"],[14,78,18,1],[15,2,18,1],[15,6,18,1,"_babelRuntimeHelpersToArray"],[15,33,18,1],[15,36,18,1,"require"],[15,43,18,1],[15,44,18,1,"_dependencyMap"],[15,58,18,1],[16,2,18,1],[16,6,18,1,"_toArray"],[16,14,18,1],[16,17,18,1,"_interopDefault"],[16,32,18,1],[16,33,18,1,"_babelRuntimeHelpersToArray"],[16,60,18,1],[17,2,3,0],[17,6,3,0,"_escapeStringRegexp"],[17,25,3,0],[17,28,3,0,"require"],[17,35,3,0],[17,36,3,0,"_dependencyMap"],[17,50,3,0],[18,2,3,0],[18,6,3,0,"escapeStringRegexp"],[18,24,3,0],[18,27,3,0,"_interopDefault"],[18,42,3,0],[18,43,3,0,"_escapeStringRegexp"],[18,62,3,0],[19,2,4,7],[19,11,4,16,"extractPathFromURL"],[19,29,4,34,"extractPathFromURL"],[19,30,4,35,"prefixes"],[19,38,4,43],[19,40,4,45,"url"],[19,43,4,48],[19,45,4,50],[20,4,5,2],[20,9,5,7],[20,13,5,13,"prefix"],[20,19,5,19],[20,23,5,23,"prefixes"],[20,31,5,31],[20,33,5,33],[21,6,6,4],[21,10,6,10,"protocol"],[21,18,6,18],[21,21,6,21,"prefix"],[21,27,6,27],[21,28,6,28,"match"],[21,33,6,33],[21,34,6,34],[21,43,6,43],[21,44,6,44],[21,47,6,47],[21,48,6,48],[21,49,6,49],[21,53,6,53],[21,55,6,55],[22,6,7,4],[22,10,7,10,"host"],[22,14,7,14],[22,17,7,17,"prefix"],[22,23,7,23],[22,24,7,24,"replace"],[22,31,7,31],[22,32,7,32],[22,36,7,36,"RegExp"],[22,42,7,42],[22,43,7,43],[22,47,7,47],[22,51,7,47,"escapeStringRegexp"],[22,69,7,65],[22,70,7,65,"default"],[22,77,7,65],[22,79,7,66,"protocol"],[22,87,7,74],[22,88,7,75],[22,90,7,77],[22,91,7,78],[22,93,7,80],[22,95,7,82],[22,96,7,83],[22,97,7,84,"replace"],[22,104,7,91],[22,105,7,92],[22,111,7,98],[22,113,7,100],[22,116,7,103],[22,117,7,104],[22,118,7,105],[23,6,7,105],[23,7,8,5,"replace"],[23,14,8,12],[23,15,8,13],[23,20,8,18],[23,22,8,20],[23,24,8,22],[23,25,8,23],[23,26,8,24],[23,27,8,25],[25,6,10,4],[25,10,10,10,"prefixRegex"],[25,21,10,21],[25,24,10,24],[25,28,10,28,"RegExp"],[25,34,10,34],[25,35,10,35],[25,39,10,39],[25,43,10,39,"escapeStringRegexp"],[25,61,10,57],[25,62,10,57,"default"],[25,69,10,57],[25,71,10,58,"protocol"],[25,79,10,66],[25,80,10,67],[25,87,10,74,"host"],[25,91,10,78],[25,92,10,79,"split"],[25,97,10,84],[25,98,10,85],[25,101,10,88],[25,102,10,89],[25,103,10,90,"map"],[25,106,10,93],[25,107,10,94,"it"],[25,109,10,96],[25,113,10,100,"it"],[25,115,10,102],[25,120,10,107],[25,123,10,110],[25,126,10,113],[25,133,10,120],[25,136,10,123],[25,140,10,123,"escapeStringRegexp"],[25,158,10,141],[25,159,10,141,"default"],[25,166,10,141],[25,168,10,142,"it"],[25,170,10,144],[25,171,10,145],[25,172,10,146],[25,173,10,147,"join"],[25,177,10,151],[25,178,10,152],[25,183,10,157],[25,184,10,158],[25,186,10,160],[25,187,10,161],[26,6,11,4],[26,10,11,4,"_url$split"],[26,20,11,4],[26,23,11,45,"url"],[26,26,11,48],[26,27,11,49,"split"],[26,32,11,54],[26,33,11,55],[26,36,11,58],[26,37,11,59],[27,8,11,59,"_url$split2"],[27,19,11,59],[27,26,11,59,"_toArray"],[27,34,11,59],[27,35,11,59,"default"],[27,42,11,59],[27,44,11,59,"_url$split"],[27,54,11,59],[28,8,11,11,"originAndPath"],[28,21,11,24],[28,24,11,24,"_url$split2"],[28,35,11,24],[29,8,11,29,"searchParams"],[29,20,11,41],[29,27,11,41,"_arrayLikeToArray"],[29,44,11,41],[29,45,11,41,"default"],[29,52,11,41],[29,54,11,41,"_url$split2"],[29,65,11,41],[29,67,11,41,"slice"],[29,72,11,41],[30,6,12,4],[30,10,12,10,"normalizedURL"],[30,23,12,23],[30,26,12,26,"originAndPath"],[30,39,12,39],[30,40,12,40,"replace"],[30,47,12,47],[30,48,12,48],[30,54,12,54],[30,56,12,56],[30,59,12,59],[30,60,12,60],[30,61,12,61,"concat"],[30,67,12,67],[30,68,12,68,"searchParams"],[30,80,12,80],[30,81,12,81,"length"],[30,87,12,87],[30,90,12,90],[30,94,12,94,"searchParams"],[30,106,12,106],[30,107,12,107,"join"],[30,111,12,111],[30,112,12,112],[30,115,12,115],[30,116,12,116],[30,118,12,118],[30,121,12,121],[30,123,12,123],[30,124,12,124],[31,6,13,4],[31,10,13,8,"prefixRegex"],[31,21,13,19],[31,22,13,20,"test"],[31,26,13,24],[31,27,13,25,"normalizedURL"],[31,40,13,38],[31,41,13,39],[31,43,13,41],[32,8,14,6],[32,15,14,13,"normalizedURL"],[32,28,14,26],[32,29,14,27,"replace"],[32,36,14,34],[32,37,14,35,"prefixRegex"],[32,48,14,46],[32,50,14,48],[32,52,14,50],[32,53,14,51],[33,6,15,4],[34,4,16,2],[35,4,17,2],[35,11,17,9,"undefined"],[35,20,17,18],[36,2,18,0],[37,0,18,1],[37,3]],"functionMap":{"names":["<global>","extractPathFromURL","host.split.map$argument_0"],"mappings":"AAA;OCG;8FCM,mDD;CDQ"},"hasCjsExports":false},"type":"js/module"}]}