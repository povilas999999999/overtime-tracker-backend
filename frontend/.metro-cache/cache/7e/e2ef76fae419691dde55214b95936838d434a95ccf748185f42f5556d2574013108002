{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"],"imports":1}},{"name":"./utils/mapNotificationResponse","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":73,"index":191}}],"key":"JkOfaen2LZL/eo5bIUuRnscMf0c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getAllScheduledNotificationsAsync;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _NotificationScheduler = require(_dependencyMap[1], \"./NotificationScheduler\");\n  var NotificationScheduler = _interopDefault(_NotificationScheduler);\n  var _utilsMapNotificationResponse = require(_dependencyMap[2], \"./utils/mapNotificationResponse\");\n  /**\n   * Fetches information about all scheduled notifications.\n   * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n   * @header schedule\n   */\n  async function getAllScheduledNotificationsAsync() {\n    if (!NotificationScheduler.default.getAllScheduledNotificationsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n    }\n    return (await NotificationScheduler.default.getAllScheduledNotificationsAsync()).map(request => (0, _utilsMapNotificationResponse.mapNotificationRequest)(request));\n  }\n});","lineCount":33,"map":[[12,2,9,15,"Object"],[12,8,9,15],[12,9,9,15,"defineProperty"],[12,23,9,15],[12,24,9,15,"exports"],[12,31,9,15],[13,4,9,15,"enumerable"],[13,14,9,15],[14,4,9,15,"get"],[14,7,9,15],[14,18,9,15,"get"],[14,19,9,15],[15,6,9,15],[15,13,9,15,"getAllScheduledNotificationsAsync"],[15,46,9,15],[16,4,9,15],[17,2,9,15],[18,2,1,0],[18,6,1,0,"_expoModulesCore"],[18,22,1,0],[18,25,1,0,"require"],[18,32,1,0],[18,33,1,0,"_dependencyMap"],[18,47,1,0],[19,2,2,0],[19,6,2,0,"_NotificationScheduler"],[19,28,2,0],[19,31,2,0,"require"],[19,38,2,0],[19,39,2,0,"_dependencyMap"],[19,53,2,0],[20,2,2,0],[20,6,2,0,"NotificationScheduler"],[20,27,2,0],[20,30,2,0,"_interopDefault"],[20,45,2,0],[20,46,2,0,"_NotificationScheduler"],[20,68,2,0],[21,2,3,0],[21,6,3,0,"_utilsMapNotificationResponse"],[21,35,3,0],[21,38,3,0,"require"],[21,45,3,0],[21,46,3,0,"_dependencyMap"],[21,60,3,0],[22,2,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,2,9,15],[27,17,9,30,"getAllScheduledNotificationsAsync"],[27,50,9,63,"getAllScheduledNotificationsAsync"],[27,51,9,63],[27,53,9,66],[28,4,10,4],[28,8,10,8],[28,9,10,9,"NotificationScheduler"],[28,30,10,30],[28,31,10,30,"default"],[28,38,10,30],[28,39,10,31,"getAllScheduledNotificationsAsync"],[28,72,10,64],[28,74,10,66],[29,6,11,8],[29,12,11,14],[29,16,11,18,"UnavailabilityError"],[29,32,11,37],[29,33,11,37,"UnavailabilityError"],[29,52,11,37],[29,53,11,38],[29,68,11,53],[29,70,11,55],[29,105,11,90],[29,106,11,91],[30,4,12,4],[31,4,13,4],[31,11,13,11],[31,12,13,12],[31,18,13,18,"NotificationScheduler"],[31,39,13,39],[31,40,13,39,"default"],[31,47,13,39],[31,48,13,40,"getAllScheduledNotificationsAsync"],[31,81,13,73],[31,82,13,74],[31,83,13,75],[31,85,13,77,"map"],[31,88,13,80],[31,89,13,82,"request"],[31,96,13,89],[31,100,13,94],[31,104,13,94,"mapNotificationRequest"],[31,133,13,116],[31,134,13,116,"mapNotificationRequest"],[31,156,13,116],[31,158,13,117,"request"],[31,165,13,124],[31,166,13,125],[31,167,13,126],[32,2,14,0],[33,0,14,1],[33,3]],"functionMap":{"names":["<global>","getAllScheduledNotificationsAsync","map$argument_0"],"mappings":"AAA;eCQ;iFCI,4CD;CDC"},"hasCjsExports":false},"type":"js/module"}]}