{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./NotificationPermissionsModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":76,"index":143}}],"key":"6SWwSpV5tzsRVpboNIWZk+BSwhE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _NotificationPermissionsModule = require(_dependencyMap[1], \"./NotificationPermissionsModule\");\n  var NotificationPermissionsModule = _interopDefault(_NotificationPermissionsModule);\n  /**\n   * Calling this function checks current permissions settings related to notifications.\n   * It lets you verify whether the app is currently allowed to display alerts, play sounds, etc.\n   * There is no user-facing effect of calling this.\n   * @return It returns a `Promise` resolving to an object represents permission settings ([`NotificationPermissionsStatus`](#notificationpermissionsstatus)).\n   * On iOS, make sure you [properly interpret the permissions response](#interpret-the-ios-permissions-response).\n   * @example Check if the app is allowed to send any type of notifications (interrupting and non-interruptingâ€“provisional on iOS).\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function allowsNotificationsAsync() {\n   *   const settings = await Notifications.getPermissionsAsync();\n   *   return (\n   *     settings.granted || settings.ios?.status === Notifications.IosAuthorizationStatus.PROVISIONAL\n   *   );\n   * }\n   * ```\n   * @header permissions\n   */\n  async function getPermissionsAsync() {\n    if (!NotificationPermissionsModule.default.getPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'getPermissionsAsync');\n    }\n    return await NotificationPermissionsModule.default.getPermissionsAsync();\n  }\n  /**\n   * Prompts the user for notification permissions according to request. **Request defaults to asking the user to allow displaying alerts,\n   * setting badge count and playing sounds**.\n   * @param permissions An object representing configuration for the request scope.\n   * @return It returns a Promise resolving to an object represents permission settings ([`NotificationPermissionsStatus`](#notificationpermissionsstatus)).\n   * On iOS, make sure you [properly interpret the permissions response](#interpret-the-ios-permissions-response).\n   * @example Prompts the user to allow the app to show alerts, play sounds, set badge count and let Siri read out messages through AirPods.\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export function requestPermissionsAsync() {\n   *   return Notifications.requestPermissionsAsync({\n   *     ios: {\n   *       allowAlert: true,\n   *       allowBadge: true,\n   *       allowSound: true,\n   *     },\n   *   });\n   * }\n   * ```\n   * @header permissions\n   */\n  async function requestPermissionsAsync(permissions) {\n    if (!NotificationPermissionsModule.default.requestPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'requestPermissionsAsync');\n    }\n    const requestedPermissions = permissions ?? {\n      ios: {\n        allowAlert: true,\n        allowBadge: true,\n        allowSound: true\n      }\n    };\n    const requestedPlatformPermissions = requestedPermissions[_expoModulesCore.Platform.OS];\n    // TODO(@kitten): This never checks whether the configuration object is undefined\n    return await NotificationPermissionsModule.default.requestPermissionsAsync(requestedPlatformPermissions);\n  }\n});","lineCount":79,"map":[[12,2,22,0,"exports"],[12,9,22,0],[12,10,22,0,"getPermissionsAsync"],[12,29,22,0],[12,32,22,0,"getPermissionsAsync"],[12,51,22,0],[13,2,50,0,"exports"],[13,9,50,0],[13,10,50,0,"requestPermissionsAsync"],[13,33,50,0],[13,36,50,0,"requestPermissionsAsync"],[13,59,50,0],[14,2,1,0],[14,6,1,0,"_expoModulesCore"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_NotificationPermissionsModule"],[15,36,2,0],[15,39,2,0,"require"],[15,46,2,0],[15,47,2,0,"_dependencyMap"],[15,61,2,0],[16,2,2,0],[16,6,2,0,"NotificationPermissionsModule"],[16,35,2,0],[16,38,2,0,"_interopDefault"],[16,53,2,0],[16,54,2,0,"_NotificationPermissionsModule"],[16,84,2,0],[17,2,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,0,11,0],[26,0,12,0],[27,0,13,0],[28,0,14,0],[29,0,15,0],[30,0,16,0],[31,0,17,0],[32,0,18,0],[33,0,19,0],[34,0,20,0],[35,0,21,0],[36,2,22,7],[36,17,22,22,"getPermissionsAsync"],[36,36,22,41,"getPermissionsAsync"],[36,37,22,41],[36,39,22,44],[37,4,23,4],[37,8,23,8],[37,9,23,9,"NotificationPermissionsModule"],[37,38,23,38],[37,39,23,38,"default"],[37,46,23,38],[37,47,23,39,"getPermissionsAsync"],[37,66,23,58],[37,68,23,60],[38,6,24,8],[38,12,24,14],[38,16,24,18,"UnavailabilityError"],[38,32,24,37],[38,33,24,37,"UnavailabilityError"],[38,52,24,37],[38,53,24,38],[38,68,24,53],[38,70,24,55],[38,91,24,76],[38,92,24,77],[39,4,25,4],[40,4,26,4],[40,11,26,11],[40,17,26,17,"NotificationPermissionsModule"],[40,46,26,46],[40,47,26,46,"default"],[40,54,26,46],[40,55,26,47,"getPermissionsAsync"],[40,74,26,66],[40,75,26,67],[40,76,26,68],[41,2,27,0],[42,2,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,0,33,0],[48,0,34,0],[49,0,35,0],[50,0,36,0],[51,0,37,0],[52,0,38,0],[53,0,39,0],[54,0,40,0],[55,0,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,0,46,0],[61,0,47,0],[62,0,48,0],[63,0,49,0],[64,2,50,7],[64,17,50,22,"requestPermissionsAsync"],[64,40,50,45,"requestPermissionsAsync"],[64,41,50,46,"permissions"],[64,52,50,57],[64,54,50,59],[65,4,51,4],[65,8,51,8],[65,9,51,9,"NotificationPermissionsModule"],[65,38,51,38],[65,39,51,38,"default"],[65,46,51,38],[65,47,51,39,"requestPermissionsAsync"],[65,70,51,62],[65,72,51,64],[66,6,52,8],[66,12,52,14],[66,16,52,18,"UnavailabilityError"],[66,32,52,37],[66,33,52,37,"UnavailabilityError"],[66,52,52,37],[66,53,52,38],[66,68,52,53],[66,70,52,55],[66,95,52,80],[66,96,52,81],[67,4,53,4],[68,4,54,4],[68,10,54,10,"requestedPermissions"],[68,30,54,30],[68,33,54,33,"permissions"],[68,44,54,44],[68,48,54,48],[69,6,55,8,"ios"],[69,9,55,11],[69,11,55,13],[70,8,56,12,"allowAlert"],[70,18,56,22],[70,20,56,24],[70,24,56,28],[71,8,57,12,"allowBadge"],[71,18,57,22],[71,20,57,24],[71,24,57,28],[72,8,58,12,"allowSound"],[72,18,58,22],[72,20,58,24],[73,6,59,8],[74,4,60,4],[74,5,60,5],[75,4,61,4],[75,10,61,10,"requestedPlatformPermissions"],[75,38,61,38],[75,41,61,41,"requestedPermissions"],[75,61,61,61],[75,62,61,62,"Platform"],[75,78,61,70],[75,79,61,70,"Platform"],[75,87,61,70],[75,88,61,71,"OS"],[75,90,61,73],[75,91,61,74],[76,4,62,4],[77,4,63,4],[77,11,63,11],[77,17,63,17,"NotificationPermissionsModule"],[77,46,63,46],[77,47,63,46,"default"],[77,54,63,46],[77,55,63,47,"requestPermissionsAsync"],[77,78,63,70],[77,79,63,71,"requestedPlatformPermissions"],[77,107,63,99],[77,108,63,100],[78,2,64,0],[79,0,64,1],[79,3]],"functionMap":{"names":["<global>","getPermissionsAsync","requestPermissionsAsync"],"mappings":"AAA;OCqB;CDK;OEuB;CFc"},"hasCjsExports":false},"type":"js/module"}]}