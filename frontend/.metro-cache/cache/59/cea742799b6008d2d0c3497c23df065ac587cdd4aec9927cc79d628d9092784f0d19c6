{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./NotificationsHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":70,"index":160}}],"key":"UF+u43m6G1FFZlom/NfKv8+5frg=","exportNames":["*"],"imports":1}},{"name":"./utils/mapNotificationResponse","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":66,"index":227}}],"key":"JkOfaen2LZL/eo5bIUuRnscMf0c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"NotificationTimeoutError\", {\n    enumerable: true,\n    get: function () {\n      return NotificationTimeoutError;\n    }\n  });\n  exports.setNotificationHandler = setNotificationHandler;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _NotificationsHandlerModule = require(_dependencyMap[1], \"./NotificationsHandlerModule\");\n  var NotificationsHandlerModule = _interopDefault(_NotificationsHandlerModule);\n  var _utilsMapNotificationResponse = require(_dependencyMap[2], \"./utils/mapNotificationResponse\");\n  /**\n   * @hidden\n   */\n  class NotificationTimeoutError extends _expoModulesCore.CodedError {\n    constructor(notificationId, notification) {\n      super('ERR_NOTIFICATION_TIMEOUT', `Notification handling timed out for ID ${notificationId}.`);\n      this.info = {\n        id: notificationId,\n        notification\n      };\n    }\n  }\n  // Web uses SyntheticEventEmitter\n  const notificationEmitter = new _expoModulesCore.LegacyEventEmitter(NotificationsHandlerModule.default);\n  const handleNotificationEventName = 'onHandleNotification';\n  const handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\n  let handleSubscription = null;\n  let handleTimeoutSubscription = null;\n  /**\n   * When a notification is received while the app is running, using this function you can set a callback that will decide\n   * whether the notification should be shown to the user or not.\n   *\n   * When a notification is received, `handleNotification` is called with the incoming notification as an argument.\n   * The function should respond with a behavior object within 3 seconds, otherwise, the notification will be discarded.\n   * If the notification is handled successfully, `handleSuccess` is called with the identifier of the notification,\n   * otherwise (or on timeout) `handleError` will be called.\n   *\n   * The default behavior when the handler is not set or does not respond in time is not to show the notification.\n   * @param handler A single parameter which should be either `null` (if you want to clear the handler) or a [`NotificationHandler`](#notificationhandler) object.\n   *\n   * @example Implementing a notification handler that always shows the notification when it is received.\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   *\n   * Notifications.setNotificationHandler({\n   *   handleNotification: async () => ({\n   *     shouldShowBanner: true,\n   *     shouldShowList: true,\n   *     shouldPlaySound: false,\n   *     shouldSetBadge: false,\n   *   }),\n   * });\n   * ```\n   * @header inForeground\n   */\n  function setNotificationHandler(handler) {\n    if (handleSubscription) {\n      handleSubscription.remove();\n      handleSubscription = null;\n    }\n    if (handleTimeoutSubscription) {\n      handleTimeoutSubscription.remove();\n      handleTimeoutSubscription = null;\n    }\n    if (handler) {\n      handleSubscription = notificationEmitter.addListener(handleNotificationEventName, async ({\n        id,\n        notification\n      }) => {\n        if (!NotificationsHandlerModule.default.handleNotificationAsync) {\n          handler.handleError?.(id, new _expoModulesCore.UnavailabilityError('Notifications', 'handleNotificationAsync'));\n          return;\n        }\n        try {\n          const mappedNotification = (0, _utilsMapNotificationResponse.mapNotification)(notification);\n          const behavior = await handler.handleNotification(mappedNotification);\n          if (behavior.shouldShowAlert) {\n            console.warn('[expo-notifications]: `shouldShowAlert` is deprecated. Specify `shouldShowBanner` and / or `shouldShowList` instead.');\n          }\n          await NotificationsHandlerModule.default.handleNotificationAsync(id, behavior);\n          handler.handleSuccess?.(id);\n        } catch (error) {\n          // TODO(@kitten): This callback expects specific Error types, but we never narrow the type before calling this callback\n          handler.handleError?.(id, error);\n        }\n      });\n      handleTimeoutSubscription = notificationEmitter.addListener(handleNotificationTimeoutEventName, ({\n        id,\n        notification\n      }) => handler.handleError?.(id, new NotificationTimeoutError(id, (0, _utilsMapNotificationResponse.mapNotification)(notification))));\n    }\n  }\n});","lineCount":105,"map":[[12,2,7,0,"Object"],[12,8,7,0],[12,9,7,0,"defineProperty"],[12,23,7,0],[12,24,7,0,"exports"],[12,31,7,0],[13,4,7,0,"enumerable"],[13,14,7,0],[14,4,7,0,"get"],[14,7,7,0],[14,18,7,0,"get"],[14,19,7,0],[15,6,7,0],[15,13,7,0,"NotificationTimeoutError"],[15,37,7,0],[16,4,7,0],[17,2,7,0],[18,2,47,0,"exports"],[18,9,47,0],[18,10,47,0,"setNotificationHandler"],[18,32,47,0],[18,35,47,0,"setNotificationHandler"],[18,57,47,0],[19,2,1,0],[19,6,1,0,"_expoModulesCore"],[19,22,1,0],[19,25,1,0,"require"],[19,32,1,0],[19,33,1,0,"_dependencyMap"],[19,47,1,0],[20,2,2,0],[20,6,2,0,"_NotificationsHandlerModule"],[20,33,2,0],[20,36,2,0,"require"],[20,43,2,0],[20,44,2,0,"_dependencyMap"],[20,58,2,0],[21,2,2,0],[21,6,2,0,"NotificationsHandlerModule"],[21,32,2,0],[21,35,2,0,"_interopDefault"],[21,50,2,0],[21,51,2,0,"_NotificationsHandlerModule"],[21,78,2,0],[22,2,3,0],[22,6,3,0,"_utilsMapNotificationResponse"],[22,35,3,0],[22,38,3,0,"require"],[22,45,3,0],[22,46,3,0,"_dependencyMap"],[22,60,3,0],[23,2,4,0],[24,0,5,0],[25,0,6,0],[26,2,7,7],[26,8,7,13,"NotificationTimeoutError"],[26,32,7,37],[26,41,7,46,"CodedError"],[26,57,7,56],[26,58,7,56,"CodedError"],[26,68,7,56],[26,69,7,57],[27,4,9,4,"constructor"],[27,15,9,15,"constructor"],[27,16,9,16,"notificationId"],[27,30,9,30],[27,32,9,32,"notification"],[27,44,9,44],[27,46,9,46],[28,6,10,8],[28,11,10,13],[28,12,10,14],[28,38,10,40],[28,40,10,42],[28,82,10,84,"notificationId"],[28,96,10,98],[28,99,10,101],[28,100,10,102],[29,6,11,8],[29,10,11,12],[29,11,11,13,"info"],[29,15,11,17],[29,18,11,20],[30,8,11,22,"id"],[30,10,11,24],[30,12,11,26,"notificationId"],[30,26,11,40],[31,8,11,42,"notification"],[32,6,11,55],[32,7,11,56],[33,4,12,4],[34,2,13,0],[35,2,14,0],[36,2,15,0],[36,8,15,6,"notificationEmitter"],[36,27,15,25],[36,30,15,28],[36,34,15,32,"LegacyEventEmitter"],[36,50,15,50],[36,51,15,50,"LegacyEventEmitter"],[36,69,15,50],[36,70,15,51,"NotificationsHandlerModule"],[36,96,15,77],[36,97,15,77,"default"],[36,104,15,77],[36,105,15,78],[37,2,16,0],[37,8,16,6,"handleNotificationEventName"],[37,35,16,33],[37,38,16,36],[37,60,16,58],[38,2,17,0],[38,8,17,6,"handleNotificationTimeoutEventName"],[38,42,17,40],[38,45,17,43],[38,74,17,72],[39,2,18,0],[39,6,18,4,"handleSubscription"],[39,24,18,22],[39,27,18,25],[39,31,18,29],[40,2,19,0],[40,6,19,4,"handleTimeoutSubscription"],[40,31,19,29],[40,34,19,32],[40,38,19,36],[41,2,20,0],[42,0,21,0],[43,0,22,0],[44,0,23,0],[45,0,24,0],[46,0,25,0],[47,0,26,0],[48,0,27,0],[49,0,28,0],[50,0,29,0],[51,0,30,0],[52,0,31,0],[53,0,32,0],[54,0,33,0],[55,0,34,0],[56,0,35,0],[57,0,36,0],[58,0,37,0],[59,0,38,0],[60,0,39,0],[61,0,40,0],[62,0,41,0],[63,0,42,0],[64,0,43,0],[65,0,44,0],[66,0,45,0],[67,0,46,0],[68,2,47,7],[68,11,47,16,"setNotificationHandler"],[68,33,47,38,"setNotificationHandler"],[68,34,47,39,"handler"],[68,41,47,46],[68,43,47,48],[69,4,48,4],[69,8,48,8,"handleSubscription"],[69,26,48,26],[69,28,48,28],[70,6,49,8,"handleSubscription"],[70,24,49,26],[70,25,49,27,"remove"],[70,31,49,33],[70,32,49,34],[70,33,49,35],[71,6,50,8,"handleSubscription"],[71,24,50,26],[71,27,50,29],[71,31,50,33],[72,4,51,4],[73,4,52,4],[73,8,52,8,"handleTimeoutSubscription"],[73,33,52,33],[73,35,52,35],[74,6,53,8,"handleTimeoutSubscription"],[74,31,53,33],[74,32,53,34,"remove"],[74,38,53,40],[74,39,53,41],[74,40,53,42],[75,6,54,8,"handleTimeoutSubscription"],[75,31,54,33],[75,34,54,36],[75,38,54,40],[76,4,55,4],[77,4,56,4],[77,8,56,8,"handler"],[77,15,56,15],[77,17,56,17],[78,6,57,8,"handleSubscription"],[78,24,57,26],[78,27,57,29,"notificationEmitter"],[78,46,57,48],[78,47,57,49,"addListener"],[78,58,57,60],[78,59,57,61,"handleNotificationEventName"],[78,86,57,88],[78,88,57,90],[78,95,57,97],[79,8,57,99,"id"],[79,10,57,101],[80,8,57,103,"notification"],[81,6,57,116],[81,7,57,117],[81,12,57,122],[82,8,58,12],[82,12,58,16],[82,13,58,17,"NotificationsHandlerModule"],[82,39,58,43],[82,40,58,43,"default"],[82,47,58,43],[82,48,58,44,"handleNotificationAsync"],[82,71,58,67],[82,73,58,69],[83,10,59,16,"handler"],[83,17,59,23],[83,18,59,24,"handleError"],[83,29,59,35],[83,32,59,38,"id"],[83,34,59,40],[83,36,59,42],[83,40,59,46,"UnavailabilityError"],[83,56,59,65],[83,57,59,65,"UnavailabilityError"],[83,76,59,65],[83,77,59,66],[83,92,59,81],[83,94,59,83],[83,119,59,108],[83,120,59,109],[83,121,59,110],[84,10,60,16],[85,8,61,12],[86,8,62,12],[86,12,62,16],[87,10,63,16],[87,16,63,22,"mappedNotification"],[87,34,63,40],[87,37,63,43],[87,41,63,43,"mapNotification"],[87,70,63,58],[87,71,63,58,"mapNotification"],[87,86,63,58],[87,88,63,59,"notification"],[87,100,63,71],[87,101,63,72],[88,10,64,16],[88,16,64,22,"behavior"],[88,24,64,30],[88,27,64,33],[88,33,64,39,"handler"],[88,40,64,46],[88,41,64,47,"handleNotification"],[88,59,64,65],[88,60,64,66,"mappedNotification"],[88,78,64,84],[88,79,64,85],[89,10,65,16],[89,14,65,20,"behavior"],[89,22,65,28],[89,23,65,29,"shouldShowAlert"],[89,38,65,44],[89,40,65,46],[90,12,66,20,"console"],[90,19,66,27],[90,20,66,28,"warn"],[90,24,66,32],[90,25,66,33],[90,143,66,151],[90,144,66,152],[91,10,67,16],[92,10,68,16],[92,16,68,22,"NotificationsHandlerModule"],[92,42,68,48],[92,43,68,48,"default"],[92,50,68,48],[92,51,68,49,"handleNotificationAsync"],[92,74,68,72],[92,75,68,73,"id"],[92,77,68,75],[92,79,68,77,"behavior"],[92,87,68,85],[92,88,68,86],[93,10,69,16,"handler"],[93,17,69,23],[93,18,69,24,"handleSuccess"],[93,31,69,37],[93,34,69,40,"id"],[93,36,69,42],[93,37,69,43],[94,8,70,12],[94,9,70,13],[94,10,71,12],[94,17,71,19,"error"],[94,22,71,24],[94,24,71,26],[95,10,72,16],[96,10,73,16,"handler"],[96,17,73,23],[96,18,73,24,"handleError"],[96,29,73,35],[96,32,73,38,"id"],[96,34,73,40],[96,36,73,42,"error"],[96,41,73,47],[96,42,73,48],[97,8,74,12],[98,6,75,8],[98,7,75,9],[98,8,75,10],[99,6,76,8,"handleTimeoutSubscription"],[99,31,76,33],[99,34,76,36,"notificationEmitter"],[99,53,76,55],[99,54,76,56,"addListener"],[99,65,76,67],[99,66,76,68,"handleNotificationTimeoutEventName"],[99,100,76,102],[99,102,76,104],[99,103,76,105],[100,8,76,107,"id"],[100,10,76,109],[101,8,76,111,"notification"],[102,6,76,124],[102,7,76,125],[102,12,76,130,"handler"],[102,19,76,137],[102,20,76,138,"handleError"],[102,31,76,149],[102,34,76,152,"id"],[102,36,76,154],[102,38,76,156],[102,42,76,160,"NotificationTimeoutError"],[102,66,76,184],[102,67,76,185,"id"],[102,69,76,187],[102,71,76,189],[102,75,76,189,"mapNotification"],[102,104,76,204],[102,105,76,204,"mapNotification"],[102,120,76,204],[102,122,76,205,"notification"],[102,134,76,217],[102,135,76,218],[102,136,76,219],[102,137,76,220],[102,138,76,221],[103,4,77,4],[104,2,78,0],[105,0,78,1],[105,3]],"functionMap":{"names":["<global>","NotificationTimeoutError","NotificationTimeoutError#constructor","setNotificationHandler","notificationEmitter.addListener$argument_1"],"mappings":"AAA;OCM;ICE;KDG;CDC;OGkC;0FCU;SDkB;wGCC,oHD;CHE"},"hasCjsExports":false},"type":"js/module"}]}