{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"],"imports":1}},{"name":"./scheduleNotificationAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":59,"index":177}}],"key":"5SfnJH0WozYV5Mt1R15xcEHYaWM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getNextTriggerDateAsync;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _NotificationScheduler = require(_dependencyMap[1], \"./NotificationScheduler\");\n  var NotificationScheduler = _interopDefault(_NotificationScheduler);\n  var _scheduleNotificationAsync = require(_dependencyMap[2], \"./scheduleNotificationAsync\");\n  /**\n   * Allows you to check what will be the next trigger date for given notification trigger input.\n   * @param trigger The schedulable notification trigger you would like to check next trigger date for (of type [`SchedulableNotificationTriggerInput`](#schedulablenotificationtriggerinput)).\n   * @return If the return value is `null`, the notification won't be triggered. Otherwise, the return value is the Unix timestamp in milliseconds\n   * at which the notification will be triggered.\n   * @example Calculate next trigger date for a notification trigger:\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * async function logNextTriggerDate() {\n   *   try {\n   *     const nextTriggerDate = await Notifications.getNextTriggerDateAsync({\n   *       hour: 9,\n   *       minute: 0,\n   *     });\n   *     console.log(nextTriggerDate === null ? 'No next trigger date' : new Date(nextTriggerDate));\n   *   } catch (e) {\n   *     console.warn(`Couldn't have calculated next trigger date: ${e}`);\n   *   }\n   * }\n   * ```\n   * @header schedule\n   */\n  async function getNextTriggerDateAsync(trigger) {\n    if (!NotificationScheduler.default.getNextTriggerDateAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n    }\n    return await NotificationScheduler.default.getNextTriggerDateAsync((0, _scheduleNotificationAsync.parseTrigger)(trigger));\n  }\n});","lineCount":51,"map":[[12,2,27,15,"Object"],[12,8,27,15],[12,9,27,15,"defineProperty"],[12,23,27,15],[12,24,27,15,"exports"],[12,31,27,15],[13,4,27,15,"enumerable"],[13,14,27,15],[14,4,27,15,"get"],[14,7,27,15],[14,18,27,15,"get"],[14,19,27,15],[15,6,27,15],[15,13,27,15,"getNextTriggerDateAsync"],[15,36,27,15],[16,4,27,15],[17,2,27,15],[18,2,1,0],[18,6,1,0,"_expoModulesCore"],[18,22,1,0],[18,25,1,0,"require"],[18,32,1,0],[18,33,1,0,"_dependencyMap"],[18,47,1,0],[19,2,2,0],[19,6,2,0,"_NotificationScheduler"],[19,28,2,0],[19,31,2,0,"require"],[19,38,2,0],[19,39,2,0,"_dependencyMap"],[19,53,2,0],[20,2,2,0],[20,6,2,0,"NotificationScheduler"],[20,27,2,0],[20,30,2,0,"_interopDefault"],[20,45,2,0],[20,46,2,0,"_NotificationScheduler"],[20,68,2,0],[21,2,3,0],[21,6,3,0,"_scheduleNotificationAsync"],[21,32,3,0],[21,35,3,0,"require"],[21,42,3,0],[21,43,3,0,"_dependencyMap"],[21,57,3,0],[22,2,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,0,9,0],[28,0,10,0],[29,0,11,0],[30,0,12,0],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,0,17,0],[36,0,18,0],[37,0,19,0],[38,0,20,0],[39,0,21,0],[40,0,22,0],[41,0,23,0],[42,0,24,0],[43,0,25,0],[44,0,26,0],[45,2,27,15],[45,17,27,30,"getNextTriggerDateAsync"],[45,40,27,53,"getNextTriggerDateAsync"],[45,41,27,54,"trigger"],[45,48,27,61],[45,50,27,63],[46,4,28,4],[46,8,28,8],[46,9,28,9,"NotificationScheduler"],[46,30,28,30],[46,31,28,30,"default"],[46,38,28,30],[46,39,28,31,"getNextTriggerDateAsync"],[46,62,28,54],[46,64,28,56],[47,6,29,8],[47,12,29,14],[47,16,29,18,"UnavailabilityError"],[47,32,29,37],[47,33,29,37,"UnavailabilityError"],[47,52,29,37],[47,53,29,38],[47,72,29,57],[47,74,29,59],[47,99,29,84],[47,100,29,85],[48,4,30,4],[49,4,31,4],[49,11,31,11],[49,17,31,17,"NotificationScheduler"],[49,38,31,38],[49,39,31,38,"default"],[49,46,31,38],[49,47,31,39,"getNextTriggerDateAsync"],[49,70,31,62],[49,71,31,63],[49,75,31,63,"parseTrigger"],[49,101,31,75],[49,102,31,75,"parseTrigger"],[49,114,31,75],[49,116,31,76,"trigger"],[49,123,31,83],[49,124,31,84],[49,125,31,85],[50,2,32,0],[51,0,32,1],[51,3]],"functionMap":{"names":["<global>","getNextTriggerDateAsync"],"mappings":"AAA;eC0B;CDK"},"hasCjsExports":false},"type":"js/module"}]}