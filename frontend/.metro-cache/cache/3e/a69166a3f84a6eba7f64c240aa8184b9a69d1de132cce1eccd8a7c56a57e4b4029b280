{"dependencies":[{"name":"badgin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":23,"index":520},"end":{"line":14,"column":40,"index":537}}],"key":"eBPGpcDtCWNIJZuBvndQAUc4GLU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  let lastSetBadgeCount = 0;\n  const badgeModule = {\n    addListener: () => {},\n    removeListeners: () => {},\n    getBadgeCountAsync: async () => {\n      return lastSetBadgeCount;\n    },\n    setBadgeCountAsync: async (badgeCount, options) => {\n      // If this module is loaded in SSR (NextJS), we can't modify the badge.\n      // It also can't load the badgin module, that instantly invokes methods on window.\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const badgin = require(_dependencyMap[0], \"badgin\");\n      if (badgeCount > 0) {\n        badgin.set(badgeCount, options);\n      } else {\n        badgin.clear();\n      }\n      lastSetBadgeCount = badgeCount;\n      return true;\n    }\n  };\n  var _default = badgeModule;\n});","lineCount":37,"map":[[7,2,25,0,"Object"],[7,8,25,0],[7,9,25,0,"defineProperty"],[7,23,25,0],[7,24,25,0,"exports"],[7,31,25,0],[8,4,25,0,"enumerable"],[8,14,25,0],[9,4,25,0,"get"],[9,7,25,0],[9,18,25,0,"get"],[9,19,25,0],[10,6,25,0],[10,13,25,0,"_default"],[10,21,25,0],[11,4,25,0],[12,2,25,0],[13,2,1,0],[13,6,1,4,"lastSetBadgeCount"],[13,23,1,21],[13,26,1,24],[13,27,1,25],[14,2,2,0],[14,8,2,6,"badgeModule"],[14,19,2,17],[14,22,2,20],[15,4,3,4,"addListener"],[15,15,3,15],[15,17,3,17,"addListener"],[15,18,3,17],[15,23,3,23],[15,24,3,25],[15,25,3,26],[16,4,4,4,"removeListeners"],[16,19,4,19],[16,21,4,21,"removeListeners"],[16,22,4,21],[16,27,4,27],[16,28,4,29],[16,29,4,30],[17,4,5,4,"getBadgeCountAsync"],[17,22,5,22],[17,24,5,24],[17,30,5,24,"getBadgeCountAsync"],[17,31,5,24],[17,36,5,36],[18,6,6,8],[18,13,6,15,"lastSetBadgeCount"],[18,30,6,32],[19,4,7,4],[19,5,7,5],[20,4,8,4,"setBadgeCountAsync"],[20,22,8,22],[20,24,8,24],[20,30,8,24,"setBadgeCountAsync"],[20,31,8,31,"badgeCount"],[20,41,8,41],[20,43,8,43,"options"],[20,50,8,50],[20,55,8,55],[21,6,9,8],[22,6,10,8],[23,6,11,8],[23,10,11,12],[23,17,11,19,"window"],[23,23,11,25],[23,28,11,30],[23,39,11,41],[23,41,11,43],[24,8,12,12],[24,15,12,19],[24,20,12,24],[25,6,13,8],[26,6,14,8],[26,12,14,14,"badgin"],[26,18,14,20],[26,21,14,23,"require"],[26,28,14,30],[26,29,14,30,"_dependencyMap"],[26,43,14,30],[26,56,14,39],[26,57,14,40],[27,6,15,8],[27,10,15,12,"badgeCount"],[27,20,15,22],[27,23,15,25],[27,24,15,26],[27,26,15,28],[28,8,16,12,"badgin"],[28,14,16,18],[28,15,16,19,"set"],[28,18,16,22],[28,19,16,23,"badgeCount"],[28,29,16,33],[28,31,16,35,"options"],[28,38,16,42],[28,39,16,43],[29,6,17,8],[29,7,17,9],[29,13,18,13],[30,8,19,12,"badgin"],[30,14,19,18],[30,15,19,19,"clear"],[30,20,19,24],[30,21,19,25],[30,22,19,26],[31,6,20,8],[32,6,21,8,"lastSetBadgeCount"],[32,23,21,25],[32,26,21,28,"badgeCount"],[32,36,21,38],[33,6,22,8],[33,13,22,15],[33,17,22,19],[34,4,23,4],[35,2,24,0],[35,3,24,1],[36,2,25,0],[36,6,25,0,"_default"],[36,14,25,0],[36,17,25,15,"badgeModule"],[36,28,25,26],[37,0,25,27],[37,3]],"functionMap":{"names":["<global>","badgeModule.addListener","badgeModule.removeListeners","badgeModule.getBadgeCountAsync","badgeModule.setBadgeCountAsync"],"mappings":"AAA;iBCE,SD;qBEC,SF;wBGC;KHE;wBIC;KJe"},"hasCjsExports":false},"type":"js/module"}]}