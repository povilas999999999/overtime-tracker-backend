{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./PushTokenManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":50,"index":96}}],"key":"/U/z9wvFThAkR9FZ1qxFHdWzZ18=","exportNames":["*"],"imports":1}},{"name":"./warnOfExpoGoPushUsage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":64,"index":161}}],"key":"JoKHHQXXGY91wSaWh9AbqdpRHBQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.addPushTokenListener = addPushTokenListener;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _PushTokenManager = require(_dependencyMap[1], \"./PushTokenManager\");\n  var PushTokenManager = _interopDefault(_PushTokenManager);\n  var _warnOfExpoGoPushUsage = require(_dependencyMap[2], \"./warnOfExpoGoPushUsage\");\n  // Web uses SyntheticEventEmitter\n  const newTokenEventName = 'onDevicePushToken';\n  /**\n   * In rare situations, a push token may be changed by the push notification service while the app is running.\n   * When a token is rolled, the old one becomes invalid and sending notifications to it will fail.\n   * A push token listener will let you handle this situation gracefully by registering the new token with your backend right away.\n   * @param listener A function accepting a push token as an argument, it will be called whenever the push token changes.\n   * @return An [`EventSubscription`](#eventsubscription) object represents the subscription of the provided listener.\n   * @header fetch\n   * @example Registering a push token listener using a React hook.\n   * ```jsx\n   * import React from 'react';\n   * import * as Notifications from 'expo-notifications';\n   *\n   * import { registerDevicePushTokenAsync } from '../api';\n   *\n   * export default function App() {\n   *   React.useEffect(() => {\n   *     const subscription = Notifications.addPushTokenListener(registerDevicePushTokenAsync);\n   *     return () => subscription.remove();\n   *   }, []);\n   *\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   */\n  function addPushTokenListener(listener) {\n    (0, _warnOfExpoGoPushUsage.warnOfExpoGoPushUsage)();\n    return PushTokenManager.default.addListener(newTokenEventName, ({\n      devicePushToken\n    }) => listener({\n      data: devicePushToken,\n      type: _expoModulesCore.Platform.OS\n    }));\n  }\n});","lineCount":54,"map":[[12,2,32,0,"exports"],[12,9,32,0],[12,10,32,0,"addPushTokenListener"],[12,30,32,0],[12,33,32,0,"addPushTokenListener"],[12,53,32,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_PushTokenManager"],[14,23,2,0],[14,26,2,0,"require"],[14,33,2,0],[14,34,2,0,"_dependencyMap"],[14,48,2,0],[15,2,2,0],[15,6,2,0,"PushTokenManager"],[15,22,2,0],[15,25,2,0,"_interopDefault"],[15,40,2,0],[15,41,2,0,"_PushTokenManager"],[15,58,2,0],[16,2,3,0],[16,6,3,0,"_warnOfExpoGoPushUsage"],[16,28,3,0],[16,31,3,0,"require"],[16,38,3,0],[16,39,3,0,"_dependencyMap"],[16,53,3,0],[17,2,4,0],[18,2,5,0],[18,8,5,6,"newTokenEventName"],[18,25,5,23],[18,28,5,26],[18,47,5,45],[19,2,6,0],[20,0,7,0],[21,0,8,0],[22,0,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,0,13,0],[27,0,14,0],[28,0,15,0],[29,0,16,0],[30,0,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,0,22,0],[36,0,23,0],[37,0,24,0],[38,0,25,0],[39,0,26,0],[40,0,27,0],[41,0,28,0],[42,0,29,0],[43,0,30,0],[44,0,31,0],[45,2,32,7],[45,11,32,16,"addPushTokenListener"],[45,31,32,36,"addPushTokenListener"],[45,32,32,37,"listener"],[45,40,32,45],[45,42,32,47],[46,4,33,4],[46,8,33,4,"warnOfExpoGoPushUsage"],[46,30,33,25],[46,31,33,25,"warnOfExpoGoPushUsage"],[46,52,33,25],[46,54,33,26],[46,55,33,27],[47,4,34,4],[47,11,34,11,"PushTokenManager"],[47,27,34,27],[47,28,34,27,"default"],[47,35,34,27],[47,36,34,28,"addListener"],[47,47,34,39],[47,48,34,40,"newTokenEventName"],[47,65,34,57],[47,67,34,59],[47,68,34,60],[48,6,34,62,"devicePushToken"],[49,4,34,78],[49,5,34,79],[49,10,34,84,"listener"],[49,18,34,92],[49,19,34,93],[50,6,34,95,"data"],[50,10,34,99],[50,12,34,101,"devicePushToken"],[50,27,34,116],[51,6,34,118,"type"],[51,10,34,122],[51,12,34,124,"Platform"],[51,28,34,132],[51,29,34,132,"Platform"],[51,37,34,132],[51,38,34,133,"OS"],[52,4,34,136],[52,5,34,137],[52,6,34,138],[52,7,34,139],[53,2,35,0],[54,0,35,1],[54,3]],"functionMap":{"names":["<global>","addPushTokenListener","PushTokenManager.addListener$argument_1"],"mappings":"AAA;OC+B;2DCE,+ED;CDC"},"hasCjsExports":false},"type":"js/module"}]}