{"dependencies":[{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":39,"index":88}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":78,"index":167}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./DevicePushTokenAutoRegistration.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":93,"index":261}}],"key":"ZH5Mz79TLJE/dTuAobGrlWmVWRo=","exportNames":["*"],"imports":1}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":262},"end":{"line":5,"column":66,"index":328}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"],"imports":1}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":64,"index":393}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getExpoPushTokenAsync;\n    }\n  });\n  var _expoApplication = require(_dependencyMap[0], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _DevicePushTokenAutoRegistrationFx = require(_dependencyMap[3], \"./DevicePushTokenAutoRegistration.fx\");\n  var _ServerRegistrationModule = require(_dependencyMap[4], \"./ServerRegistrationModule\");\n  var ServerRegistrationModule = _interopDefault(_ServerRegistrationModule);\n  var _getDevicePushTokenAsync = require(_dependencyMap[5], \"./getDevicePushTokenAsync\");\n  var getDevicePushTokenAsync = _interopDefault(_getDevicePushTokenAsync);\n  const productionBaseUrl = 'https://exp.host/--/api/v2/';\n  /**\n   * Returns an Expo token that can be used to send a push notification to the device using Expo's push notifications service.\n   *\n   * This method makes requests to the Expo's servers. It can get rejected in cases where the request itself fails\n   * (for example, due to the device being offline, experiencing a network timeout, or other HTTPS request failures).\n   * To provide offline support to your users, you should `try/catch` this method and implement retry logic to attempt\n   * to get the push token later, once the device is back online.\n   *\n   * > For Expo's backend to be able to send notifications to your app, you will need to provide it with push notification keys.\n   * For more information, see [credentials](/push-notifications/push-notifications-setup/#get-credentials-for-development-builds) in the push notifications setup.\n   *\n   * @param options Object allowing you to pass in push notification configuration.\n   * @return Returns a `Promise` that resolves to an object representing acquired push token.\n   * @header fetch\n   *\n   * @example\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function registerForPushNotificationsAsync(userId: string) {\n   *   const expoPushToken = await Notifications.getExpoPushTokenAsync({\n   *    projectId: 'your-project-id',\n   *   });\n   *\n   *   await fetch('https://example.com/', {\n   *     method: 'POST',\n   *     headers: {\n   *       'Content-Type': 'application/json',\n   *     },\n   *     body: JSON.stringify({\n   *       userId,\n   *       expoPushToken,\n   *     }),\n   *   });\n   * }\n   * ```\n   */\n  async function getExpoPushTokenAsync(options = {}) {\n    const devicePushToken = options.devicePushToken || (await (0, getDevicePushTokenAsync.default)());\n    const deviceId = options.deviceId || (await getDeviceIdAsync());\n    // Depending on the runtime environment, the default may be located in various places.\n    const projectId = options.projectId || Constants.default.easConfig?.projectId || Constants.default.expoConfig?.extra?.eas?.projectId;\n    if (!projectId) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_EXPERIENCE_ID', `No \"projectId\" found. If \"projectId\" can't be inferred from the manifest (for instance, in bare workflow), you have to pass it in yourself.`);\n    }\n    const applicationId = options.applicationId || Application.applicationId;\n    if (!applicationId) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_APPLICATION_ID', `No \"applicationId\" found. If it can't be inferred from native configuration by expo-application, you have to pass it in yourself.`);\n    }\n    const type = options.type || getTypeOfToken(devicePushToken);\n    const development = options.development || (await shouldUseDevelopmentNotificationService());\n    const baseUrl = options.baseUrl ?? productionBaseUrl;\n    const url = options.url ?? `${baseUrl}push/getExpoPushToken`;\n    const body = {\n      type,\n      deviceId: deviceId.toLowerCase(),\n      development,\n      appId: applicationId,\n      deviceToken: getDeviceToken(devicePushToken),\n      projectId\n    };\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).catch(error => {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NETWORK_ERROR', `Error encountered while fetching Expo token: ${error}.`);\n    });\n    if (!response.ok) {\n      const statusInfo = response.statusText || response.status;\n      let body = undefined;\n      try {\n        body = await response.text();\n      } catch {\n        // do nothing\n      }\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Error encountered while fetching Expo token, expected an OK response, received: ${statusInfo} (body: \"${body}\").`);\n    }\n    const expoPushToken = getExpoPushToken(await parseResponse(response));\n    try {\n      if (options.url || options.baseUrl) {\n        console.debug(`[expo-notifications] Since the URL endpoint to register in has been customized in the options, expo-notifications won't try to auto-update the device push token on the server.`);\n      } else {\n        await (0, _DevicePushTokenAutoRegistrationFx.setAutoServerRegistrationEnabledAsync)(true);\n      }\n    } catch (e) {\n      console.warn('[expo-notifications] Could not enable automatically registering new device tokens with the Expo notification service', e);\n    }\n    return {\n      type: 'expo',\n      data: expoPushToken\n    };\n  }\n  async function parseResponse(response) {\n    try {\n      return await response.json();\n    } catch {\n      try {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received body: ${JSON.stringify(await response.text())}.`);\n      } catch {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received response: ${JSON.stringify(response)}.`);\n      }\n    }\n  }\n  function getExpoPushToken(data) {\n    if (!data || !(typeof data === 'object') || !data.data || !(typeof data.data === 'object') || !data.data.expoPushToken || !(typeof data.data.expoPushToken === 'string')) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Malformed response from server, expected \"{ data: { expoPushToken: string } }\", received: ${JSON.stringify(data, null, 2)}.`);\n    }\n    return data.data.expoPushToken;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  async function getDeviceIdAsync() {\n    try {\n      if (!ServerRegistrationModule.default.getInstallationIdAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n      }\n      return await ServerRegistrationModule.default.getInstallationIdAsync();\n    } catch (e) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIF_DEVICE_ID', `Could not have fetched installation ID of the application: ${e}.`);\n    }\n  }\n  function getDeviceToken(devicePushToken) {\n    if (typeof devicePushToken.data === 'string') {\n      return devicePushToken.data;\n    }\n    return JSON.stringify(devicePushToken.data);\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  async function shouldUseDevelopmentNotificationService() {\n    if (_expoModulesCore.Platform.OS === 'ios') {\n      try {\n        const notificationServiceEnvironment = await Application.getIosPushNotificationServiceEnvironmentAsync();\n        if (notificationServiceEnvironment === 'development') {\n          return true;\n        }\n      } catch {\n        // We can't do anything here, we'll fallback to false then.\n      }\n    }\n    return false;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n});","lineCount":199,"map":[[27,2,45,15,"Object"],[27,8,45,15],[27,9,45,15,"defineProperty"],[27,23,45,15],[27,24,45,15,"exports"],[27,31,45,15],[28,4,45,15,"enumerable"],[28,14,45,15],[29,4,45,15,"get"],[29,7,45,15],[29,18,45,15,"get"],[29,19,45,15],[30,6,45,15],[30,13,45,15,"getExpoPushTokenAsync"],[30,34,45,15],[31,4,45,15],[32,2,45,15],[33,2,1,0],[33,6,1,0,"_expoApplication"],[33,22,1,0],[33,25,1,0,"require"],[33,32,1,0],[33,33,1,0,"_dependencyMap"],[33,47,1,0],[34,2,1,0],[34,6,1,0,"Application"],[34,17,1,0],[34,20,1,0,"_interopNamespace"],[34,37,1,0],[34,38,1,0,"_expoApplication"],[34,54,1,0],[35,2,2,0],[35,6,2,0,"_expoConstants"],[35,20,2,0],[35,23,2,0,"require"],[35,30,2,0],[35,31,2,0,"_dependencyMap"],[35,45,2,0],[36,2,2,0],[36,6,2,0,"Constants"],[36,15,2,0],[36,18,2,0,"_interopDefault"],[36,33,2,0],[36,34,2,0,"_expoConstants"],[36,48,2,0],[37,2,3,0],[37,6,3,0,"_expoModulesCore"],[37,22,3,0],[37,25,3,0,"require"],[37,32,3,0],[37,33,3,0,"_dependencyMap"],[37,47,3,0],[38,2,4,0],[38,6,4,0,"_DevicePushTokenAutoRegistrationFx"],[38,40,4,0],[38,43,4,0,"require"],[38,50,4,0],[38,51,4,0,"_dependencyMap"],[38,65,4,0],[39,2,5,0],[39,6,5,0,"_ServerRegistrationModule"],[39,31,5,0],[39,34,5,0,"require"],[39,41,5,0],[39,42,5,0,"_dependencyMap"],[39,56,5,0],[40,2,5,0],[40,6,5,0,"ServerRegistrationModule"],[40,30,5,0],[40,33,5,0,"_interopDefault"],[40,48,5,0],[40,49,5,0,"_ServerRegistrationModule"],[40,74,5,0],[41,2,6,0],[41,6,6,0,"_getDevicePushTokenAsync"],[41,30,6,0],[41,33,6,0,"require"],[41,40,6,0],[41,41,6,0,"_dependencyMap"],[41,55,6,0],[42,2,6,0],[42,6,6,0,"getDevicePushTokenAsync"],[42,29,6,0],[42,32,6,0,"_interopDefault"],[42,47,6,0],[42,48,6,0,"_getDevicePushTokenAsync"],[42,72,6,0],[43,2,7,0],[43,8,7,6,"productionBaseUrl"],[43,25,7,23],[43,28,7,26],[43,57,7,55],[44,2,8,0],[45,0,9,0],[46,0,10,0],[47,0,11,0],[48,0,12,0],[49,0,13,0],[50,0,14,0],[51,0,15,0],[52,0,16,0],[53,0,17,0],[54,0,18,0],[55,0,19,0],[56,0,20,0],[57,0,21,0],[58,0,22,0],[59,0,23,0],[60,0,24,0],[61,0,25,0],[62,0,26,0],[63,0,27,0],[64,0,28,0],[65,0,29,0],[66,0,30,0],[67,0,31,0],[68,0,32,0],[69,0,33,0],[70,0,34,0],[71,0,35,0],[72,0,36,0],[73,0,37,0],[74,0,38,0],[75,0,39,0],[76,0,40,0],[77,0,41,0],[78,0,42,0],[79,0,43,0],[80,0,44,0],[81,2,45,15],[81,17,45,30,"getExpoPushTokenAsync"],[81,38,45,51,"getExpoPushTokenAsync"],[81,39,45,52,"options"],[81,46,45,59],[81,49,45,62],[81,50,45,63],[81,51,45,64],[81,53,45,66],[82,4,46,4],[82,10,46,10,"devicePushToken"],[82,25,46,25],[82,28,46,28,"options"],[82,35,46,35],[82,36,46,36,"devicePushToken"],[82,51,46,51],[82,56,46,56],[82,62,46,62],[82,66,46,62,"getDevicePushTokenAsync"],[82,89,46,85],[82,90,46,85,"default"],[82,97,46,85],[82,99,46,86],[82,100,46,87],[82,101,46,88],[83,4,47,4],[83,10,47,10,"deviceId"],[83,18,47,18],[83,21,47,21,"options"],[83,28,47,28],[83,29,47,29,"deviceId"],[83,37,47,37],[83,42,47,42],[83,48,47,48,"getDeviceIdAsync"],[83,64,47,64],[83,65,47,65],[83,66,47,66],[83,67,47,67],[84,4,48,4],[85,4,49,4],[85,10,49,10,"projectId"],[85,19,49,19],[85,22,49,22,"options"],[85,29,49,29],[85,30,49,30,"projectId"],[85,39,49,39],[85,43,50,8,"Constants"],[85,52,50,17],[85,53,50,17,"default"],[85,60,50,17],[85,61,50,18,"easConfig"],[85,70,50,27],[85,72,50,29,"projectId"],[85,81,50,38],[85,85,51,8,"Constants"],[85,94,51,17],[85,95,51,17,"default"],[85,102,51,17],[85,103,51,18,"expoConfig"],[85,113,51,28],[85,115,51,30,"extra"],[85,120,51,35],[85,122,51,37,"eas"],[85,125,51,40],[85,127,51,42,"projectId"],[85,136,51,51],[86,4,52,4],[86,8,52,8],[86,9,52,9,"projectId"],[86,18,52,18],[86,20,52,20],[87,6,53,8],[87,12,53,14],[87,16,53,18,"CodedError"],[87,32,53,28],[87,33,53,28,"CodedError"],[87,43,53,28],[87,44,53,29],[87,80,53,65],[87,82,53,67],[87,223,53,208],[87,224,53,209],[88,4,54,4],[89,4,55,4],[89,10,55,10,"applicationId"],[89,23,55,23],[89,26,55,26,"options"],[89,33,55,33],[89,34,55,34,"applicationId"],[89,47,55,47],[89,51,55,51,"Application"],[89,62,55,62],[89,63,55,63,"applicationId"],[89,76,55,76],[90,4,56,4],[90,8,56,8],[90,9,56,9,"applicationId"],[90,22,56,22],[90,24,56,24],[91,6,57,8],[91,12,57,14],[91,16,57,18,"CodedError"],[91,32,57,28],[91,33,57,28,"CodedError"],[91,43,57,28],[91,44,57,29],[91,81,57,66],[91,83,57,68],[91,214,57,199],[91,215,57,200],[92,4,58,4],[93,4,59,4],[93,10,59,10,"type"],[93,14,59,14],[93,17,59,17,"options"],[93,24,59,24],[93,25,59,25,"type"],[93,29,59,29],[93,33,59,33,"getTypeOfToken"],[93,47,59,47],[93,48,59,48,"devicePushToken"],[93,63,59,63],[93,64,59,64],[94,4,60,4],[94,10,60,10,"development"],[94,21,60,21],[94,24,60,24,"options"],[94,31,60,31],[94,32,60,32,"development"],[94,43,60,43],[94,48,60,48],[94,54,60,54,"shouldUseDevelopmentNotificationService"],[94,93,60,93],[94,94,60,94],[94,95,60,95],[94,96,60,96],[95,4,61,4],[95,10,61,10,"baseUrl"],[95,17,61,17],[95,20,61,20,"options"],[95,27,61,27],[95,28,61,28,"baseUrl"],[95,35,61,35],[95,39,61,39,"productionBaseUrl"],[95,56,61,56],[96,4,62,4],[96,10,62,10,"url"],[96,13,62,13],[96,16,62,16,"options"],[96,23,62,23],[96,24,62,24,"url"],[96,27,62,27],[96,31,62,31],[96,34,62,34,"baseUrl"],[96,41,62,41],[96,64,62,64],[97,4,63,4],[97,10,63,10,"body"],[97,14,63,14],[97,17,63,17],[98,6,64,8,"type"],[98,10,64,12],[99,6,65,8,"deviceId"],[99,14,65,16],[99,16,65,18,"deviceId"],[99,24,65,26],[99,25,65,27,"toLowerCase"],[99,36,65,38],[99,37,65,39],[99,38,65,40],[100,6,66,8,"development"],[100,17,66,19],[101,6,67,8,"appId"],[101,11,67,13],[101,13,67,15,"applicationId"],[101,26,67,28],[102,6,68,8,"deviceToken"],[102,17,68,19],[102,19,68,21,"getDeviceToken"],[102,33,68,35],[102,34,68,36,"devicePushToken"],[102,49,68,51],[102,50,68,52],[103,6,69,8,"projectId"],[104,4,70,4],[104,5,70,5],[105,4,71,4],[105,10,71,10,"response"],[105,18,71,18],[105,21,71,21],[105,27,71,27,"fetch"],[105,32,71,32],[105,33,71,33,"url"],[105,36,71,36],[105,38,71,38],[106,6,72,8,"method"],[106,12,72,14],[106,14,72,16],[106,20,72,22],[107,6,73,8,"headers"],[107,13,73,15],[107,15,73,17],[108,8,74,12],[108,22,74,26],[108,24,74,28],[109,6,75,8],[109,7,75,9],[110,6,76,8,"body"],[110,10,76,12],[110,12,76,14,"JSON"],[110,16,76,18],[110,17,76,19,"stringify"],[110,26,76,28],[110,27,76,29,"body"],[110,31,76,33],[111,4,77,4],[111,5,77,5],[111,6,77,6],[111,7,77,7,"catch"],[111,12,77,12],[111,13,77,14,"error"],[111,18,77,19],[111,22,77,24],[112,6,78,8],[112,12,78,14],[112,16,78,18,"CodedError"],[112,32,78,28],[112,33,78,28,"CodedError"],[112,43,78,28],[112,44,78,29],[112,77,78,62],[112,79,78,64],[112,127,78,112,"error"],[112,132,78,117],[112,135,78,120],[112,136,78,121],[113,4,79,4],[113,5,79,5],[113,6,79,6],[114,4,80,4],[114,8,80,8],[114,9,80,9,"response"],[114,17,80,17],[114,18,80,18,"ok"],[114,20,80,20],[114,22,80,22],[115,6,81,8],[115,12,81,14,"statusInfo"],[115,22,81,24],[115,25,81,27,"response"],[115,33,81,35],[115,34,81,36,"statusText"],[115,44,81,46],[115,48,81,50,"response"],[115,56,81,58],[115,57,81,59,"status"],[115,63,81,65],[116,6,82,8],[116,10,82,12,"body"],[116,14,82,16],[116,17,82,19,"undefined"],[116,26,82,28],[117,6,83,8],[117,10,83,12],[118,8,84,12,"body"],[118,12,84,16],[118,15,84,19],[118,21,84,25,"response"],[118,29,84,33],[118,30,84,34,"text"],[118,34,84,38],[118,35,84,39],[118,36,84,40],[119,6,85,8],[119,7,85,9],[119,8,86,8],[119,14,86,14],[120,8,87,12],[121,6,87,12],[122,6,89,8],[122,12,89,14],[122,16,89,18,"CodedError"],[122,32,89,28],[122,33,89,28,"CodedError"],[122,43,89,28],[122,44,89,29],[122,76,89,61],[122,78,89,63],[122,161,89,146,"statusInfo"],[122,171,89,156],[122,183,89,168,"body"],[122,187,89,172],[122,192,89,177],[122,193,89,178],[123,4,90,4],[124,4,91,4],[124,10,91,10,"expoPushToken"],[124,23,91,23],[124,26,91,26,"getExpoPushToken"],[124,42,91,42],[124,43,91,43],[124,49,91,49,"parseResponse"],[124,62,91,62],[124,63,91,63,"response"],[124,71,91,71],[124,72,91,72],[124,73,91,73],[125,4,92,4],[125,8,92,8],[126,6,93,8],[126,10,93,12,"options"],[126,17,93,19],[126,18,93,20,"url"],[126,21,93,23],[126,25,93,27,"options"],[126,32,93,34],[126,33,93,35,"baseUrl"],[126,40,93,42],[126,42,93,44],[127,8,94,12,"console"],[127,15,94,19],[127,16,94,20,"debug"],[127,21,94,25],[127,22,94,26],[127,199,94,203],[127,200,94,204],[128,6,95,8],[128,7,95,9],[128,13,96,13],[129,8,97,12],[129,14,97,18],[129,18,97,18,"setAutoServerRegistrationEnabledAsync"],[129,52,97,55],[129,53,97,55,"setAutoServerRegistrationEnabledAsync"],[129,90,97,55],[129,92,97,56],[129,96,97,60],[129,97,97,61],[130,6,98,8],[131,4,99,4],[131,5,99,5],[131,6,100,4],[131,13,100,11,"e"],[131,14,100,12],[131,16,100,14],[132,6,101,8,"console"],[132,13,101,15],[132,14,101,16,"warn"],[132,18,101,20],[132,19,101,21],[132,137,101,139],[132,139,101,141,"e"],[132,140,101,142],[132,141,101,143],[133,4,102,4],[134,4,103,4],[134,11,103,11],[135,6,104,8,"type"],[135,10,104,12],[135,12,104,14],[135,18,104,20],[136,6,105,8,"data"],[136,10,105,12],[136,12,105,14,"expoPushToken"],[137,4,106,4],[137,5,106,5],[138,2,107,0],[139,2,108,0],[139,17,108,15,"parseResponse"],[139,30,108,28,"parseResponse"],[139,31,108,29,"response"],[139,39,108,37],[139,41,108,39],[140,4,109,4],[140,8,109,8],[141,6,110,8],[141,13,110,15],[141,19,110,21,"response"],[141,27,110,29],[141,28,110,30,"json"],[141,32,110,34],[141,33,110,35],[141,34,110,36],[142,4,111,4],[142,5,111,5],[142,6,112,4],[142,12,112,10],[143,6,113,8],[143,10,113,12],[144,8,114,12],[144,14,114,18],[144,18,114,22,"CodedError"],[144,34,114,32],[144,35,114,32,"CodedError"],[144,45,114,32],[144,46,114,33],[144,78,114,65],[144,80,114,67],[144,161,114,148,"JSON"],[144,165,114,152],[144,166,114,153,"stringify"],[144,175,114,162],[144,176,114,163],[144,182,114,169,"response"],[144,190,114,177],[144,191,114,178,"text"],[144,195,114,182],[144,196,114,183],[144,197,114,184],[144,198,114,185],[144,201,114,188],[144,202,114,189],[145,6,115,8],[145,7,115,9],[145,8,116,8],[145,14,116,14],[146,8,117,12],[146,14,117,18],[146,18,117,22,"CodedError"],[146,34,117,32],[146,35,117,32,"CodedError"],[146,45,117,32],[146,46,117,33],[146,78,117,65],[146,80,117,67],[146,165,117,152,"JSON"],[146,169,117,156],[146,170,117,157,"stringify"],[146,179,117,166],[146,180,117,167,"response"],[146,188,117,175],[146,189,117,176],[146,192,117,179],[146,193,117,180],[147,6,118,8],[148,4,119,4],[149,2,120,0],[150,2,121,0],[150,11,121,9,"getExpoPushToken"],[150,27,121,25,"getExpoPushToken"],[150,28,121,26,"data"],[150,32,121,30],[150,34,121,32],[151,4,122,4],[151,8,122,8],[151,9,122,9,"data"],[151,13,122,13],[151,17,123,8],[151,19,123,10],[151,26,123,17,"data"],[151,30,123,21],[151,35,123,26],[151,43,123,34],[151,44,123,35],[151,48,124,8],[151,49,124,9,"data"],[151,53,124,13],[151,54,124,14,"data"],[151,58,124,18],[151,62,125,8],[151,64,125,10],[151,71,125,17,"data"],[151,75,125,21],[151,76,125,22,"data"],[151,80,125,26],[151,85,125,31],[151,93,125,39],[151,94,125,40],[151,98,126,8],[151,99,126,9,"data"],[151,103,126,13],[151,104,126,14,"data"],[151,108,126,18],[151,109,126,19,"expoPushToken"],[151,122,126,32],[151,126,127,8],[151,128,127,10],[151,135,127,17,"data"],[151,139,127,21],[151,140,127,22,"data"],[151,144,127,26],[151,145,127,27,"expoPushToken"],[151,158,127,40],[151,163,127,45],[151,171,127,53],[151,172,127,54],[151,174,127,56],[152,6,128,8],[152,12,128,14],[152,16,128,18,"CodedError"],[152,32,128,28],[152,33,128,28,"CodedError"],[152,43,128,28],[152,44,128,29],[152,76,128,61],[152,78,128,63],[152,171,128,156,"JSON"],[152,175,128,160],[152,176,128,161,"stringify"],[152,185,128,170],[152,186,128,171,"data"],[152,190,128,175],[152,192,128,177],[152,196,128,181],[152,198,128,183],[152,199,128,184],[152,200,128,185],[152,203,128,188],[152,204,128,189],[153,4,129,4],[154,4,130,4],[154,11,130,11,"data"],[154,15,130,15],[154,16,130,16,"data"],[154,20,130,20],[154,21,130,21,"expoPushToken"],[154,34,130,34],[155,2,131,0],[156,2,132,0],[157,2,133,0],[157,17,133,15,"getDeviceIdAsync"],[157,33,133,31,"getDeviceIdAsync"],[157,34,133,31],[157,36,133,34],[158,4,134,4],[158,8,134,8],[159,6,135,8],[159,10,135,12],[159,11,135,13,"ServerRegistrationModule"],[159,35,135,37],[159,36,135,37,"default"],[159,43,135,37],[159,44,135,38,"getInstallationIdAsync"],[159,66,135,60],[159,68,135,62],[160,8,136,12],[160,14,136,18],[160,18,136,22,"UnavailabilityError"],[160,34,136,41],[160,35,136,41,"UnavailabilityError"],[160,54,136,41],[160,55,136,42],[160,85,136,72],[160,87,136,74],[160,111,136,98],[160,112,136,99],[161,6,137,8],[162,6,138,8],[162,13,138,15],[162,19,138,21,"ServerRegistrationModule"],[162,43,138,45],[162,44,138,45,"default"],[162,51,138,45],[162,52,138,46,"getInstallationIdAsync"],[162,74,138,68],[162,75,138,69],[162,76,138,70],[163,4,139,4],[163,5,139,5],[163,6,140,4],[163,13,140,11,"e"],[163,14,140,12],[163,16,140,14],[164,6,141,8],[164,12,141,14],[164,16,141,18,"CodedError"],[164,32,141,28],[164,33,141,28,"CodedError"],[164,43,141,28],[164,44,141,29],[164,65,141,50],[164,67,141,52],[164,129,141,114,"e"],[164,130,141,115],[164,133,141,118],[164,134,141,119],[165,4,142,4],[166,2,143,0],[167,2,144,0],[167,11,144,9,"getDeviceToken"],[167,25,144,23,"getDeviceToken"],[167,26,144,24,"devicePushToken"],[167,41,144,39],[167,43,144,41],[168,4,145,4],[168,8,145,8],[168,15,145,15,"devicePushToken"],[168,30,145,30],[168,31,145,31,"data"],[168,35,145,35],[168,40,145,40],[168,48,145,48],[168,50,145,50],[169,6,146,8],[169,13,146,15,"devicePushToken"],[169,28,146,30],[169,29,146,31,"data"],[169,33,146,35],[170,4,147,4],[171,4,148,4],[171,11,148,11,"JSON"],[171,15,148,15],[171,16,148,16,"stringify"],[171,25,148,25],[171,26,148,26,"devicePushToken"],[171,41,148,41],[171,42,148,42,"data"],[171,46,148,46],[171,47,148,47],[172,2,149,0],[173,2,150,0],[174,2,151,0],[174,17,151,15,"shouldUseDevelopmentNotificationService"],[174,56,151,54,"shouldUseDevelopmentNotificationService"],[174,57,151,54],[174,59,151,57],[175,4,152,4],[175,8,152,8,"Platform"],[175,24,152,16],[175,25,152,16,"Platform"],[175,33,152,16],[175,34,152,17,"OS"],[175,36,152,19],[175,41,152,24],[175,46,152,29],[175,48,152,31],[176,6,153,8],[176,10,153,12],[177,8,154,12],[177,14,154,18,"notificationServiceEnvironment"],[177,44,154,48],[177,47,154,51],[177,53,154,57,"Application"],[177,64,154,68],[177,65,154,69,"getIosPushNotificationServiceEnvironmentAsync"],[177,110,154,114],[177,111,154,115],[177,112,154,116],[178,8,155,12],[178,12,155,16,"notificationServiceEnvironment"],[178,42,155,46],[178,47,155,51],[178,60,155,64],[178,62,155,66],[179,10,156,16],[179,17,156,23],[179,21,156,27],[180,8,157,12],[181,6,158,8],[181,7,158,9],[181,8,159,8],[181,14,159,14],[182,8,160,12],[183,6,160,12],[184,4,162,4],[185,4,163,4],[185,11,163,11],[185,16,163,16],[186,2,164,0],[187,2,165,0],[188,2,166,0],[188,11,166,9,"getTypeOfToken"],[188,25,166,23,"getTypeOfToken"],[188,26,166,24,"devicePushToken"],[188,41,166,39],[188,43,166,41],[189,4,167,4],[189,12,167,12,"devicePushToken"],[189,27,167,27],[189,28,167,28,"type"],[189,32,167,32],[190,6,168,8],[190,11,168,13],[190,16,168,18],[191,8,169,12],[191,15,169,19],[191,21,169,25],[192,6,170,8],[192,11,170,13],[192,20,170,22],[193,8,171,12],[193,15,171,19],[193,20,171,24],[194,6,172,8],[195,6,173,8],[196,8,174,12],[196,15,174,19,"devicePushToken"],[196,30,174,34],[196,31,174,35,"type"],[196,35,174,39],[197,4,175,4],[198,2,176,0],[199,0,176,1],[199,3]],"functionMap":{"names":["<global>","getExpoPushTokenAsync","fetch._catch$argument_0","parseResponse","getExpoPushToken","getDeviceIdAsync","getDeviceToken","shouldUseDevelopmentNotificationService","getTypeOfToken"],"mappings":"AAA;eC4C;aCgC;KDE;CD4B;AGC;CHY;AIC;CJU;AKE;CLU;AMC;CNK;AOE;CPa;AQE;CRU"},"hasCjsExports":false},"type":"js/module"}]}