{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return setNotificationChannelAsync;\n    }\n  });\n  /**\n   * Assigns the channel configuration to a channel of a specified name (creating it if need be).\n   * This method lets you assign given notification channel to a notification channel group.\n   *\n   * > **Note:** After a channel has been created, you can modify only its name and description. This limitation is imposed by the Android OS.\n   *\n   * > **Note:** For some settings to be applied on all Android versions, it may be necessary to duplicate the configuration across both\n   * > a single notification and its respective notification channel.\n   *\n   * For example, for a notification to play a custom sound on Android versions **below** 8.0,\n   * the custom notification sound has to be set on the notification (through the [`NotificationContentInput`](#notificationcontentinput)),\n   * and for the custom sound to play on Android versions **above** 8.0, the relevant notification channel must have the custom sound configured\n   * (through the [`NotificationChannelInput`](#notificationchannelinput)). For more information,\n   * see [Set custom notification sounds on Android](#set-custom-notification-sounds).\n   * @param channelId The channel identifier.\n   * @param channel Object representing the channel's configuration.\n   * @return A Promise which resolving to the object (of type [`NotificationChannel`](#notificationchannel)) describing the modified channel\n   * or to `null` if the platform does not support notification channels.\n   * @platform android\n   * @header channels\n   */\n  async function setNotificationChannelAsync(channelId, channel) {\n    console.debug('Notification channels feature is only supported on Android.');\n    return null;\n  }\n});","lineCount":38,"map":[[7,2,22,15,"Object"],[7,8,22,15],[7,9,22,15,"defineProperty"],[7,23,22,15],[7,24,22,15,"exports"],[7,31,22,15],[8,4,22,15,"enumerable"],[8,14,22,15],[9,4,22,15,"get"],[9,7,22,15],[9,18,22,15,"get"],[9,19,22,15],[10,6,22,15],[10,13,22,15,"setNotificationChannelAsync"],[10,40,22,15],[11,4,22,15],[12,2,22,15],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,2,22,15],[34,17,22,30,"setNotificationChannelAsync"],[34,44,22,57,"setNotificationChannelAsync"],[34,45,22,58,"channelId"],[34,54,22,67],[34,56,22,69,"channel"],[34,63,22,76],[34,65,22,78],[35,4,23,4,"console"],[35,11,23,11],[35,12,23,12,"debug"],[35,17,23,17],[35,18,23,18],[35,79,23,79],[35,80,23,80],[36,4,24,4],[36,11,24,11],[36,15,24,15],[37,2,25,0],[38,0,25,1],[38,3]],"functionMap":{"names":["<global>","setNotificationChannelAsync"],"mappings":"AAA;eCqB;CDG"},"hasCjsExports":false},"type":"js/module"}]}