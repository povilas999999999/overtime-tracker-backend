{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NotificationsEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":151,"index":202}}],"key":"Qab5cB8LewiAQY57MV0vxh0VKT8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useLastNotificationResponse;\n    }\n  });\n  Object.defineProperty(exports, \"determineNextResponse\", {\n    enumerable: true,\n    get: function () {\n      return determineNextResponse;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _NotificationsEmitter = require(_dependencyMap[1], \"./NotificationsEmitter\");\n  /**\n   * A React hook which returns the notification response that was received most recently\n   * (a notification response designates an interaction with a notification, such as tapping on it).\n   *\n   * To clear the last notification response, use [`clearLastNotificationResponseAsync()`](#notificationsclearlastnotificationresponseasync).\n   *\n   * > If you don't want to use a hook, you can use `Notifications.getLastNotificationResponseAsync()` instead.\n   *\n   * @return The hook may return one of these three types/values:\n   * - `undefined` - until we're sure of what to return,\n   * - `null` - if no notification response has been received yet,\n   * - a [`NotificationResponse`](#notificationresponse) object - if a notification response was received.\n   *\n   * @example\n   * Responding to a notification tap by opening a URL that could be put into the notification's `data`\n   * (opening the URL is your responsibility and is not a part of the `expo-notifications` API):\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   * import { Linking } from 'react-native';\n   *\n   * export default function App() {\n   *   const lastNotificationResponse = Notifications.useLastNotificationResponse();\n   *   React.useEffect(() => {\n   *     if (\n   *       lastNotificationResponse &&\n   *       lastNotificationResponse.notification.request.content.data.url &&\n   *       lastNotificationResponse.actionIdentifier === Notifications.DEFAULT_ACTION_IDENTIFIER\n   *     ) {\n   *       Linking.openURL(lastNotificationResponse.notification.request.content.data.url);\n   *     }\n   *   }, [lastNotificationResponse]);\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   * @header listen\n   */\n  function useLastNotificationResponse() {\n    const [lastNotificationResponse, setLastNotificationResponse] = (0, _react.useState)(undefined);\n    // useLayoutEffect ensures the listener is registered as soon as possible\n    (0, _react.useLayoutEffect)(() => {\n      // Get the last response first, in case it was set earlier (even in native code on startup)\n      const response = (0, _NotificationsEmitter.getLastNotificationResponse)();\n      setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response));\n      // Set up listener for responses that come in, and set the last response if needed\n      const subscription = (0, _NotificationsEmitter.addNotificationResponseReceivedListener)(response => setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response)));\n      const clearResponseSubscription = (0, _NotificationsEmitter.addNotificationResponseClearedListener)(() => {\n        setLastNotificationResponse(null);\n      });\n      return () => {\n        subscription.remove();\n        clearResponseSubscription.remove();\n      };\n    }, []);\n    return lastNotificationResponse;\n  }\n  // returns the new response if it is different from the previous,\n  // also has to return undefined until we're sure of what to return (null or a response)\n  // the transition from response to null is invalid\n  const determineNextResponse = (prevResponse, newResponse) => {\n    if (!newResponse) {\n      return null;\n    }\n    if (!prevResponse) {\n      return newResponse;\n    }\n    return prevResponse.notification.request.identifier !== newResponse.notification.request.identifier ? newResponse : prevResponse;\n  };\n});","lineCount":90,"map":[[7,2,41,15,"Object"],[7,8,41,15],[7,9,41,15,"defineProperty"],[7,23,41,15],[7,24,41,15,"exports"],[7,31,41,15],[8,4,41,15,"enumerable"],[8,14,41,15],[9,4,41,15,"get"],[9,7,41,15],[9,18,41,15,"get"],[9,19,41,15],[10,6,41,15],[10,13,41,15,"useLastNotificationResponse"],[10,40,41,15],[11,4,41,15],[12,2,41,15],[13,2,63,0,"Object"],[13,8,63,0],[13,9,63,0,"defineProperty"],[13,23,63,0],[13,24,63,0,"exports"],[13,31,63,0],[14,4,63,0,"enumerable"],[14,14,63,0],[15,4,63,0,"get"],[15,7,63,0],[15,18,63,0,"get"],[15,19,63,0],[16,6,63,0],[16,13,63,0,"determineNextResponse"],[16,34,63,0],[17,4,63,0],[18,2,63,0],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_NotificationsEmitter"],[20,27,2,0],[20,30,2,0,"require"],[20,37,2,0],[20,38,2,0,"_dependencyMap"],[20,52,2,0],[21,2,3,0],[22,0,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,0,9,0],[28,0,10,0],[29,0,11,0],[30,0,12,0],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,0,17,0],[36,0,18,0],[37,0,19,0],[38,0,20,0],[39,0,21,0],[40,0,22,0],[41,0,23,0],[42,0,24,0],[43,0,25,0],[44,0,26,0],[45,0,27,0],[46,0,28,0],[47,0,29,0],[48,0,30,0],[49,0,31,0],[50,0,32,0],[51,0,33,0],[52,0,34,0],[53,0,35,0],[54,0,36,0],[55,0,37,0],[56,0,38,0],[57,0,39,0],[58,0,40,0],[59,2,41,15],[59,11,41,24,"useLastNotificationResponse"],[59,38,41,51,"useLastNotificationResponse"],[59,39,41,51],[59,41,41,54],[60,4,42,4],[60,10,42,10],[60,11,42,11,"lastNotificationResponse"],[60,35,42,35],[60,37,42,37,"setLastNotificationResponse"],[60,64,42,64],[60,65,42,65],[60,68,42,68],[60,72,42,68,"useState"],[60,78,42,76],[60,79,42,76,"useState"],[60,87,42,76],[60,89,42,77,"undefined"],[60,98,42,86],[60,99,42,87],[61,4,43,4],[62,4,44,4],[62,8,44,4,"useLayoutEffect"],[62,14,44,19],[62,15,44,19,"useLayoutEffect"],[62,30,44,19],[62,32,44,20],[62,38,44,26],[63,6,45,8],[64,6,46,8],[64,12,46,14,"response"],[64,20,46,22],[64,23,46,25],[64,27,46,25,"getLastNotificationResponse"],[64,48,46,52],[64,49,46,52,"getLastNotificationResponse"],[64,76,46,52],[64,78,46,53],[64,79,46,54],[65,6,47,8,"setLastNotificationResponse"],[65,33,47,35],[65,34,47,37,"prevResponse"],[65,46,47,49],[65,50,47,54,"determineNextResponse"],[65,71,47,75],[65,72,47,76,"prevResponse"],[65,84,47,88],[65,86,47,90,"response"],[65,94,47,98],[65,95,47,99],[65,96,47,100],[66,6,48,8],[67,6,49,8],[67,12,49,14,"subscription"],[67,24,49,26],[67,27,49,29],[67,31,49,29,"addNotificationResponseReceivedListener"],[67,52,49,68],[67,53,49,68,"addNotificationResponseReceivedListener"],[67,92,49,68],[67,94,49,70,"response"],[67,102,49,78],[67,106,49,83,"setLastNotificationResponse"],[67,133,49,110],[67,134,49,112,"prevResponse"],[67,146,49,124],[67,150,49,129,"determineNextResponse"],[67,171,49,150],[67,172,49,151,"prevResponse"],[67,184,49,163],[67,186,49,165,"response"],[67,194,49,173],[67,195,49,174],[67,196,49,175],[67,197,49,176],[68,6,50,8],[68,12,50,14,"clearResponseSubscription"],[68,37,50,39],[68,40,50,42],[68,44,50,42,"addNotificationResponseClearedListener"],[68,65,50,80],[68,66,50,80,"addNotificationResponseClearedListener"],[68,104,50,80],[68,106,50,81],[68,112,50,87],[69,8,51,12,"setLastNotificationResponse"],[69,35,51,39],[69,36,51,40],[69,40,51,44],[69,41,51,45],[70,6,52,8],[70,7,52,9],[70,8,52,10],[71,6,53,8],[71,13,53,15],[71,19,53,21],[72,8,54,12,"subscription"],[72,20,54,24],[72,21,54,25,"remove"],[72,27,54,31],[72,28,54,32],[72,29,54,33],[73,8,55,12,"clearResponseSubscription"],[73,33,55,37],[73,34,55,38,"remove"],[73,40,55,44],[73,41,55,45],[73,42,55,46],[74,6,56,8],[74,7,56,9],[75,4,57,4],[75,5,57,5],[75,7,57,7],[75,9,57,9],[75,10,57,10],[76,4,58,4],[76,11,58,11,"lastNotificationResponse"],[76,35,58,35],[77,2,59,0],[78,2,60,0],[79,2,61,0],[80,2,62,0],[81,2,63,7],[81,8,63,13,"determineNextResponse"],[81,29,63,34],[81,32,63,37,"determineNextResponse"],[81,33,63,38,"prevResponse"],[81,45,63,50],[81,47,63,52,"newResponse"],[81,58,63,63],[81,63,63,68],[82,4,64,4],[82,8,64,8],[82,9,64,9,"newResponse"],[82,20,64,20],[82,22,64,22],[83,6,65,8],[83,13,65,15],[83,17,65,19],[84,4,66,4],[85,4,67,4],[85,8,67,8],[85,9,67,9,"prevResponse"],[85,21,67,21],[85,23,67,23],[86,6,68,8],[86,13,68,15,"newResponse"],[86,24,68,26],[87,4,69,4],[88,4,70,4],[88,11,70,11,"prevResponse"],[88,23,70,23],[88,24,70,24,"notification"],[88,36,70,36],[88,37,70,37,"request"],[88,44,70,44],[88,45,70,45,"identifier"],[88,55,70,55],[88,60,71,8,"newResponse"],[88,71,71,19],[88,72,71,20,"notification"],[88,84,71,32],[88,85,71,33,"request"],[88,92,71,40],[88,93,71,41,"identifier"],[88,103,71,51],[88,106,72,10,"newResponse"],[88,117,72,21],[88,120,73,10,"prevResponse"],[88,132,73,22],[89,2,74,0],[89,3,74,1],[90,0,74,2],[90,3]],"functionMap":{"names":["<global>","useLastNotificationResponse","useLayoutEffect$argument_0","setLastNotificationResponse$argument_0","addNotificationResponseReceivedListener$argument_0","addNotificationResponseClearedListener$argument_0","<anonymous>","determineNextResponse"],"mappings":"AAA;eCwC;oBCG;oCCG,+DD;qEEE,0CD,+DC,CF;iFGC;SHE;eIC;SJG;KDC;CDE;qCOI;CPW"},"hasCjsExports":false},"type":"js/module"}]}